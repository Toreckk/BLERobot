ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"LED_PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LED_PWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	LED_PWM_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	LED_PWM_Enable, %function
  25              	LED_PWM_Enable:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC4\\LED_PWM.c"
   1:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/LED_PWM.c **** * File Name: LED_PWM.c
   3:Generated_Source\PSoC4/LED_PWM.c **** * Version 3.30
   4:Generated_Source\PSoC4/LED_PWM.c **** *
   5:Generated_Source\PSoC4/LED_PWM.c **** * Description:
   6:Generated_Source\PSoC4/LED_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/LED_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/LED_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/LED_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/LED_PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/LED_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/LED_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/LED_PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/LED_PWM.c **** *
  15:Generated_Source\PSoC4/LED_PWM.c **** * Note:
  16:Generated_Source\PSoC4/LED_PWM.c **** *
  17:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC4/LED_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/LED_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/LED_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/LED_PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/LED_PWM.c **** 
  24:Generated_Source\PSoC4/LED_PWM.c **** #include "LED_PWM.h"
  25:Generated_Source\PSoC4/LED_PWM.c **** 
  26:Generated_Source\PSoC4/LED_PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/LED_PWM.c **** #ifdef LED_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/LED_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/LED_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/LED_PWM.c **** #endif /* LED_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 2


  31:Generated_Source\PSoC4/LED_PWM.c **** 
  32:Generated_Source\PSoC4/LED_PWM.c **** uint8 LED_PWM_initVar = 0u;
  33:Generated_Source\PSoC4/LED_PWM.c **** 
  34:Generated_Source\PSoC4/LED_PWM.c **** 
  35:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/LED_PWM.c **** * Function Name: LED_PWM_Start
  37:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC4/LED_PWM.c **** *
  39:Generated_Source\PSoC4/LED_PWM.c **** * Summary:
  40:Generated_Source\PSoC4/LED_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/LED_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/LED_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/LED_PWM.c **** *
  44:Generated_Source\PSoC4/LED_PWM.c **** * Parameters:
  45:Generated_Source\PSoC4/LED_PWM.c **** *  None
  46:Generated_Source\PSoC4/LED_PWM.c **** *
  47:Generated_Source\PSoC4/LED_PWM.c **** * Return:
  48:Generated_Source\PSoC4/LED_PWM.c **** *  None
  49:Generated_Source\PSoC4/LED_PWM.c **** *
  50:Generated_Source\PSoC4/LED_PWM.c **** * Global variables:
  51:Generated_Source\PSoC4/LED_PWM.c **** *  LED_PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/LED_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/LED_PWM.c **** *
  54:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/LED_PWM.c **** void LED_PWM_Start(void) 
  56:Generated_Source\PSoC4/LED_PWM.c **** {
  57:Generated_Source\PSoC4/LED_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/LED_PWM.c ****     if(LED_PWM_initVar == 0u)
  59:Generated_Source\PSoC4/LED_PWM.c ****     {
  60:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_Init();
  61:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_initVar = 1u;
  62:Generated_Source\PSoC4/LED_PWM.c ****     }
  63:Generated_Source\PSoC4/LED_PWM.c ****     LED_PWM_Enable();
  64:Generated_Source\PSoC4/LED_PWM.c **** 
  65:Generated_Source\PSoC4/LED_PWM.c **** }
  66:Generated_Source\PSoC4/LED_PWM.c **** 
  67:Generated_Source\PSoC4/LED_PWM.c **** 
  68:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/LED_PWM.c **** * Function Name: LED_PWM_Init
  70:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC4/LED_PWM.c **** *
  72:Generated_Source\PSoC4/LED_PWM.c **** * Summary:
  73:Generated_Source\PSoC4/LED_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/LED_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/LED_PWM.c **** *  LED_PWM_Start().
  76:Generated_Source\PSoC4/LED_PWM.c **** *
  77:Generated_Source\PSoC4/LED_PWM.c **** * Parameters:
  78:Generated_Source\PSoC4/LED_PWM.c **** *  None
  79:Generated_Source\PSoC4/LED_PWM.c **** *
  80:Generated_Source\PSoC4/LED_PWM.c **** * Return:
  81:Generated_Source\PSoC4/LED_PWM.c **** *  None
  82:Generated_Source\PSoC4/LED_PWM.c **** *
  83:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/LED_PWM.c **** void LED_PWM_Init(void) 
  85:Generated_Source\PSoC4/LED_PWM.c **** {
  86:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UsingFixedFunction || LED_PWM_UseControl)
  87:Generated_Source\PSoC4/LED_PWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 3


  88:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction || LED_PWM_UseControl) */
  89:Generated_Source\PSoC4/LED_PWM.c **** 
  90:Generated_Source\PSoC4/LED_PWM.c ****     #if(!LED_PWM_UsingFixedFunction)
  91:Generated_Source\PSoC4/LED_PWM.c ****         #if(LED_PWM_UseStatus)
  92:Generated_Source\PSoC4/LED_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/LED_PWM.c ****             uint8 LED_PWM_interruptState;
  94:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UseStatus) */
  95:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (!LED_PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC4/LED_PWM.c **** 
  97:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UsingFixedFunction)
  98:Generated_Source\PSoC4/LED_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_CONTROL |= LED_PWM_CFG0_MODE;
 100:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_DeadBand2_4)
 101:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_CONTROL |= LED_PWM_CFG0_DB;
 102:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_DeadBand2_4) */
 103:Generated_Source\PSoC4/LED_PWM.c **** 
 104:Generated_Source\PSoC4/LED_PWM.c ****         ctrl = LED_PWM_CONTROL3 & ((uint8 )(~LED_PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_CONTROL3 = ctrl | LED_PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/LED_PWM.c **** 
 107:Generated_Source\PSoC4/LED_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_RT1 &= ((uint8)(~LED_PWM_RT1_MASK));
 109:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_RT1 |= LED_PWM_SYNC;
 110:Generated_Source\PSoC4/LED_PWM.c **** 
 111:Generated_Source\PSoC4/LED_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_RT1 &= ((uint8)(~LED_PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_RT1 |= LED_PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC4/LED_PWM.c **** 
 115:Generated_Source\PSoC4/LED_PWM.c ****     #elif (LED_PWM_UseControl)
 116:Generated_Source\PSoC4/LED_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/LED_PWM.c ****         ctrl = LED_PWM_CONTROL & ((uint8)(~LED_PWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/LED_PWM.c ****                 ((uint8)(~LED_PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_CONTROL = ctrl | LED_PWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/LED_PWM.c ****                                    LED_PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC4/LED_PWM.c **** 
 123:Generated_Source\PSoC4/LED_PWM.c ****     #if (!LED_PWM_UsingFixedFunction)
 124:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_Resolution == 8)
 125:Generated_Source\PSoC4/LED_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_AUX_CONTROLDP0 |= (LED_PWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/LED_PWM.c ****         #else /* (LED_PWM_Resolution == 16)*/
 128:Generated_Source\PSoC4/LED_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_AUX_CONTROLDP0 |= (LED_PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_AUX_CONTROLDP1 |= (LED_PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_Resolution == 8) */
 132:Generated_Source\PSoC4/LED_PWM.c **** 
 133:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_WriteCounter(LED_PWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (!LED_PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC4/LED_PWM.c **** 
 136:Generated_Source\PSoC4/LED_PWM.c ****     LED_PWM_WritePeriod(LED_PWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/LED_PWM.c **** 
 138:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_UseOneCompareMode)
 139:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_WriteCompare(LED_PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/LED_PWM.c ****         #else
 141:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_WriteCompare1(LED_PWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_WriteCompare2(LED_PWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC4/LED_PWM.c **** 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 4


 145:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_KillModeMinTime)
 146:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_WriteKillTime(LED_PWM_MinimumKillTime);
 147:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_KillModeMinTime) */
 148:Generated_Source\PSoC4/LED_PWM.c **** 
 149:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_DeadBandUsed)
 150:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_WriteDeadTime(LED_PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_DeadBandUsed) */
 152:Generated_Source\PSoC4/LED_PWM.c **** 
 153:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UseStatus || LED_PWM_UsingFixedFunction)
 154:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_SetInterruptMode(LED_PWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UseStatus || LED_PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC4/LED_PWM.c **** 
 157:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UsingFixedFunction)
 158:Generated_Source\PSoC4/LED_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_GLOBAL_ENABLE |= LED_PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/LED_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_CONTROL2 |= LED_PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/LED_PWM.c ****     #else
 163:Generated_Source\PSoC4/LED_PWM.c ****         #if(LED_PWM_UseStatus)
 164:Generated_Source\PSoC4/LED_PWM.c **** 
 165:Generated_Source\PSoC4/LED_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/LED_PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/LED_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_STATUS_AUX_CTRL |= LED_PWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/LED_PWM.c **** 
 171:Generated_Source\PSoC4/LED_PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/LED_PWM.c ****             CyExitCriticalSection(LED_PWM_interruptState);
 173:Generated_Source\PSoC4/LED_PWM.c **** 
 174:Generated_Source\PSoC4/LED_PWM.c ****             /* Clear the FIFO to enable the LED_PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/LED_PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_ClearFIFO();
 177:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UseStatus) */
 178:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC4/LED_PWM.c **** }
 180:Generated_Source\PSoC4/LED_PWM.c **** 
 181:Generated_Source\PSoC4/LED_PWM.c **** 
 182:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/LED_PWM.c **** * Function Name: LED_PWM_Enable
 184:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC4/LED_PWM.c **** *
 186:Generated_Source\PSoC4/LED_PWM.c **** * Summary:
 187:Generated_Source\PSoC4/LED_PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/LED_PWM.c **** *
 189:Generated_Source\PSoC4/LED_PWM.c **** * Parameters:
 190:Generated_Source\PSoC4/LED_PWM.c **** *  None
 191:Generated_Source\PSoC4/LED_PWM.c **** *
 192:Generated_Source\PSoC4/LED_PWM.c **** * Return:
 193:Generated_Source\PSoC4/LED_PWM.c **** *  None
 194:Generated_Source\PSoC4/LED_PWM.c **** *
 195:Generated_Source\PSoC4/LED_PWM.c **** * Side Effects:
 196:Generated_Source\PSoC4/LED_PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/LED_PWM.c **** *
 198:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/LED_PWM.c **** void LED_PWM_Enable(void) 
 200:Generated_Source\PSoC4/LED_PWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/LED_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UsingFixedFunction)
 203:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_GLOBAL_ENABLE |= LED_PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_GLOBAL_STBY_ENABLE |= LED_PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC4/LED_PWM.c **** 
 207:Generated_Source\PSoC4/LED_PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UseControl || LED_PWM_UsingFixedFunction)
 209:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_CONTROL |= LED_PWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UseControl || LED_PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC4/LED_PWM.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 71000F40 		.word	1074724977
  48              		.cfi_endproc
  49              	.LFE4:
  50              		.size	LED_PWM_Enable, .-LED_PWM_Enable
  51              		.section	.text.LED_PWM_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	LED_PWM_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	LED_PWM_Stop, %function
  57              	LED_PWM_Stop:
  58              	.LFB5:
 212:Generated_Source\PSoC4/LED_PWM.c **** 
 213:Generated_Source\PSoC4/LED_PWM.c **** 
 214:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/LED_PWM.c **** * Function Name: LED_PWM_Stop
 216:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC4/LED_PWM.c **** *
 218:Generated_Source\PSoC4/LED_PWM.c **** * Summary:
 219:Generated_Source\PSoC4/LED_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/LED_PWM.c **** *  interrupts.
 221:Generated_Source\PSoC4/LED_PWM.c **** *
 222:Generated_Source\PSoC4/LED_PWM.c **** * Parameters:
 223:Generated_Source\PSoC4/LED_PWM.c **** *  None
 224:Generated_Source\PSoC4/LED_PWM.c **** *
 225:Generated_Source\PSoC4/LED_PWM.c **** * Return:
 226:Generated_Source\PSoC4/LED_PWM.c **** *  None
 227:Generated_Source\PSoC4/LED_PWM.c **** *
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 6


 228:Generated_Source\PSoC4/LED_PWM.c **** * Side Effects:
 229:Generated_Source\PSoC4/LED_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/LED_PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/LED_PWM.c **** *
 232:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/LED_PWM.c **** void LED_PWM_Stop(void) 
 234:Generated_Source\PSoC4/LED_PWM.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UseControl || LED_PWM_UsingFixedFunction)
 236:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_CONTROL &= ((uint8)(~LED_PWM_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UseControl || LED_PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC4/LED_PWM.c **** 
 239:Generated_Source\PSoC4/LED_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UsingFixedFunction)
 241:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_GLOBAL_ENABLE &= ((uint8)(~LED_PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~LED_PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC4/LED_PWM.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 71000F40 		.word	1074724977
  77              		.cfi_endproc
  78              	.LFE5:
  79              		.size	LED_PWM_Stop, .-LED_PWM_Stop
  80              		.section	.text.LED_PWM_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	LED_PWM_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	LED_PWM_WriteCounter, %function
  86              	LED_PWM_WriteCounter:
  87              	.LFB6:
 245:Generated_Source\PSoC4/LED_PWM.c **** 
 246:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_UseOneCompareMode)
 247:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_CompareMode1SW)
 248:Generated_Source\PSoC4/LED_PWM.c **** 
 249:Generated_Source\PSoC4/LED_PWM.c **** 
 250:Generated_Source\PSoC4/LED_PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/LED_PWM.c ****         * Function Name: LED_PWM_SetCompareMode
 252:Generated_Source\PSoC4/LED_PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/LED_PWM.c ****         *
 254:Generated_Source\PSoC4/LED_PWM.c ****         * Summary:
 255:Generated_Source\PSoC4/LED_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 7


 256:Generated_Source\PSoC4/LED_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/LED_PWM.c ****         *
 258:Generated_Source\PSoC4/LED_PWM.c ****         * Parameters:
 259:Generated_Source\PSoC4/LED_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/LED_PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/LED_PWM.c ****         *
 262:Generated_Source\PSoC4/LED_PWM.c ****         * Return:
 263:Generated_Source\PSoC4/LED_PWM.c ****         *  None
 264:Generated_Source\PSoC4/LED_PWM.c ****         *
 265:Generated_Source\PSoC4/LED_PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/LED_PWM.c ****         void LED_PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/LED_PWM.c ****         {
 268:Generated_Source\PSoC4/LED_PWM.c ****             #if(LED_PWM_UsingFixedFunction)
 269:Generated_Source\PSoC4/LED_PWM.c **** 
 270:Generated_Source\PSoC4/LED_PWM.c ****                 #if(0 != LED_PWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/LED_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << LED_PWM_CTRL_CMPMODE1_
 272:Generated_Source\PSoC4/LED_PWM.c ****                 #else
 273:Generated_Source\PSoC4/LED_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/LED_PWM.c ****                 #endif /* (0 != LED_PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/LED_PWM.c **** 
 276:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_CONTROL3 &= ((uint8)(~LED_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/LED_PWM.c **** 
 279:Generated_Source\PSoC4/LED_PWM.c ****             #elif (LED_PWM_UseControl)
 280:Generated_Source\PSoC4/LED_PWM.c **** 
 281:Generated_Source\PSoC4/LED_PWM.c ****                 #if(0 != LED_PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/LED_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << LED_PWM_CTRL_CMPMODE1
 283:Generated_Source\PSoC4/LED_PWM.c ****                                                 LED_PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/LED_PWM.c ****                 #else
 285:Generated_Source\PSoC4/LED_PWM.c ****                     uint8 comparemode1masked = comparemode & LED_PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/LED_PWM.c ****                 #endif /* (0 != LED_PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/LED_PWM.c **** 
 288:Generated_Source\PSoC4/LED_PWM.c ****                 #if(0 != LED_PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/LED_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << LED_PWM_CTRL_CMPMODE2
 290:Generated_Source\PSoC4/LED_PWM.c ****                                                LED_PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/LED_PWM.c ****                 #else
 292:Generated_Source\PSoC4/LED_PWM.c ****                     uint8 comparemode2masked = comparemode & LED_PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/LED_PWM.c ****                 #endif /* (0 != LED_PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/LED_PWM.c **** 
 295:Generated_Source\PSoC4/LED_PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_CONTROL &= ((uint8)(~(LED_PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/LED_PWM.c ****                                             LED_PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/LED_PWM.c **** 
 300:Generated_Source\PSoC4/LED_PWM.c ****             #else
 301:Generated_Source\PSoC4/LED_PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/LED_PWM.c ****             #endif /* (LED_PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC4/LED_PWM.c ****         }
 304:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* LED_PWM_CompareMode1SW */
 305:Generated_Source\PSoC4/LED_PWM.c **** 
 306:Generated_Source\PSoC4/LED_PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/LED_PWM.c **** 
 308:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_CompareMode1SW)
 309:Generated_Source\PSoC4/LED_PWM.c **** 
 310:Generated_Source\PSoC4/LED_PWM.c **** 
 311:Generated_Source\PSoC4/LED_PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/LED_PWM.c ****         * Function Name: LED_PWM_SetCompareMode1
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 8


 313:Generated_Source\PSoC4/LED_PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/LED_PWM.c ****         *
 315:Generated_Source\PSoC4/LED_PWM.c ****         * Summary:
 316:Generated_Source\PSoC4/LED_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/LED_PWM.c ****         *
 318:Generated_Source\PSoC4/LED_PWM.c ****         * Parameters:
 319:Generated_Source\PSoC4/LED_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/LED_PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/LED_PWM.c ****         *
 322:Generated_Source\PSoC4/LED_PWM.c ****         * Return:
 323:Generated_Source\PSoC4/LED_PWM.c ****         *  None
 324:Generated_Source\PSoC4/LED_PWM.c ****         *
 325:Generated_Source\PSoC4/LED_PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/LED_PWM.c ****         void LED_PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/LED_PWM.c ****         {
 328:Generated_Source\PSoC4/LED_PWM.c ****             #if(0 != LED_PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/LED_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << LED_PWM_CTRL_CMPMODE1_SHIF
 330:Generated_Source\PSoC4/LED_PWM.c ****                                            LED_PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/LED_PWM.c ****             #else
 332:Generated_Source\PSoC4/LED_PWM.c ****                 uint8 comparemodemasked = comparemode & LED_PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/LED_PWM.c ****             #endif /* (0 != LED_PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/LED_PWM.c **** 
 335:Generated_Source\PSoC4/LED_PWM.c ****             #if (LED_PWM_UseControl)
 336:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_CONTROL &= ((uint8)(~LED_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/LED_PWM.c ****             #endif /* (LED_PWM_UseControl) */
 339:Generated_Source\PSoC4/LED_PWM.c ****         }
 340:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* LED_PWM_CompareMode1SW */
 341:Generated_Source\PSoC4/LED_PWM.c **** 
 342:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_CompareMode2SW)
 343:Generated_Source\PSoC4/LED_PWM.c **** 
 344:Generated_Source\PSoC4/LED_PWM.c **** 
 345:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_SetCompareMode2
 347:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/LED_PWM.c ****     *
 349:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 350:Generated_Source\PSoC4/LED_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/LED_PWM.c ****     *
 352:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 353:Generated_Source\PSoC4/LED_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/LED_PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/LED_PWM.c ****     *
 356:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 357:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 358:Generated_Source\PSoC4/LED_PWM.c ****     *
 359:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/LED_PWM.c ****     {
 362:Generated_Source\PSoC4/LED_PWM.c **** 
 363:Generated_Source\PSoC4/LED_PWM.c ****         #if(0 != LED_PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/LED_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << LED_PWM_CTRL_CMPMODE2_SHIFT)) 
 365:Generated_Source\PSoC4/LED_PWM.c ****                                                  LED_PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/LED_PWM.c ****         #else
 367:Generated_Source\PSoC4/LED_PWM.c ****             uint8 comparemodemasked = comparemode & LED_PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (0 != LED_PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/LED_PWM.c **** 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 9


 370:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_UseControl)
 371:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_CONTROL &= ((uint8)(~LED_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UseControl) */
 374:Generated_Source\PSoC4/LED_PWM.c ****     }
 375:Generated_Source\PSoC4/LED_PWM.c ****     #endif /*LED_PWM_CompareMode2SW */
 376:Generated_Source\PSoC4/LED_PWM.c **** 
 377:Generated_Source\PSoC4/LED_PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/LED_PWM.c **** 
 379:Generated_Source\PSoC4/LED_PWM.c **** 
 380:Generated_Source\PSoC4/LED_PWM.c **** #if (!LED_PWM_UsingFixedFunction)
 381:Generated_Source\PSoC4/LED_PWM.c **** 
 382:Generated_Source\PSoC4/LED_PWM.c **** 
 383:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_WriteCounter
 385:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/LED_PWM.c ****     *
 387:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 388:Generated_Source\PSoC4/LED_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/LED_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/LED_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/LED_PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/LED_PWM.c ****     *
 393:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 394:Generated_Source\PSoC4/LED_PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/LED_PWM.c ****     *
 396:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 397:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 398:Generated_Source\PSoC4/LED_PWM.c ****     *
 399:Generated_Source\PSoC4/LED_PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC4/LED_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/LED_PWM.c ****     *
 402:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/LED_PWM.c ****                                        
 405:Generated_Source\PSoC4/LED_PWM.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/LED_PWM.c ****         CY_SET_REG8(LED_PWM_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1870     		strb	r0, [r3]
 407:Generated_Source\PSoC4/LED_PWM.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 00000F40 		.word	1074724864
 104              		.cfi_endproc
 105              	.LFE6:
 106              		.size	LED_PWM_WriteCounter, .-LED_PWM_WriteCounter
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 10


 107              		.section	.text.LED_PWM_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	LED_PWM_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	LED_PWM_ReadCounter, %function
 113              	LED_PWM_ReadCounter:
 114              	.LFB7:
 408:Generated_Source\PSoC4/LED_PWM.c **** 
 409:Generated_Source\PSoC4/LED_PWM.c **** 
 410:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadCounter
 412:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/LED_PWM.c ****     *
 414:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 415:Generated_Source\PSoC4/LED_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/LED_PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/LED_PWM.c ****     *
 418:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 419:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 420:Generated_Source\PSoC4/LED_PWM.c ****     *
 421:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 422:Generated_Source\PSoC4/LED_PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/LED_PWM.c ****     *
 424:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadCounter(void) 
 426:Generated_Source\PSoC4/LED_PWM.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/LED_PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/LED_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/LED_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/LED_PWM.c ****           (void)CY_GET_REG8(LED_PWM_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/LED_PWM.c **** 
 432:Generated_Source\PSoC4/LED_PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/LED_PWM.c ****         return (CY_GET_REG8(LED_PWM_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1878     		ldrb	r0, [r3]
 126 0008 C0B2     		uxtb	r0, r0
 434:Generated_Source\PSoC4/LED_PWM.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 10000F40 		.word	1074724880
 134 0010 50000F40 		.word	1074724944
 135              		.cfi_endproc
 136              	.LFE7:
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 11


 137              		.size	LED_PWM_ReadCounter, .-LED_PWM_ReadCounter
 138              		.section	.text.LED_PWM_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	LED_PWM_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	LED_PWM_WritePeriod, %function
 144              	LED_PWM_WritePeriod:
 145              	.LFB9:
 435:Generated_Source\PSoC4/LED_PWM.c **** 
 436:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UseStatus)
 437:Generated_Source\PSoC4/LED_PWM.c **** 
 438:Generated_Source\PSoC4/LED_PWM.c **** 
 439:Generated_Source\PSoC4/LED_PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/LED_PWM.c ****         * Function Name: LED_PWM_ClearFIFO
 441:Generated_Source\PSoC4/LED_PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/LED_PWM.c ****         *
 443:Generated_Source\PSoC4/LED_PWM.c ****         * Summary:
 444:Generated_Source\PSoC4/LED_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/LED_PWM.c ****         *
 446:Generated_Source\PSoC4/LED_PWM.c ****         * Parameters:
 447:Generated_Source\PSoC4/LED_PWM.c ****         *  None
 448:Generated_Source\PSoC4/LED_PWM.c ****         *
 449:Generated_Source\PSoC4/LED_PWM.c ****         * Return:
 450:Generated_Source\PSoC4/LED_PWM.c ****         *  None
 451:Generated_Source\PSoC4/LED_PWM.c ****         *
 452:Generated_Source\PSoC4/LED_PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/LED_PWM.c ****         void LED_PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC4/LED_PWM.c ****         {
 455:Generated_Source\PSoC4/LED_PWM.c ****             while(0u != (LED_PWM_ReadStatusRegister() & LED_PWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/LED_PWM.c ****             {
 457:Generated_Source\PSoC4/LED_PWM.c ****                 (void)LED_PWM_ReadCapture();
 458:Generated_Source\PSoC4/LED_PWM.c ****             }
 459:Generated_Source\PSoC4/LED_PWM.c ****         }
 460:Generated_Source\PSoC4/LED_PWM.c **** 
 461:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* LED_PWM_UseStatus */
 462:Generated_Source\PSoC4/LED_PWM.c **** 
 463:Generated_Source\PSoC4/LED_PWM.c **** #endif /* !LED_PWM_UsingFixedFunction */
 464:Generated_Source\PSoC4/LED_PWM.c **** 
 465:Generated_Source\PSoC4/LED_PWM.c **** 
 466:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/LED_PWM.c **** * Function Name: LED_PWM_WritePeriod
 468:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC4/LED_PWM.c **** *
 470:Generated_Source\PSoC4/LED_PWM.c **** * Summary:
 471:Generated_Source\PSoC4/LED_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/LED_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/LED_PWM.c **** *
 474:Generated_Source\PSoC4/LED_PWM.c **** * Parameters:
 475:Generated_Source\PSoC4/LED_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/LED_PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/LED_PWM.c **** *
 478:Generated_Source\PSoC4/LED_PWM.c **** * Return:
 479:Generated_Source\PSoC4/LED_PWM.c **** *  None
 480:Generated_Source\PSoC4/LED_PWM.c **** *
 481:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/LED_PWM.c **** void LED_PWM_WritePeriod(uint8 period) 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 12


 483:Generated_Source\PSoC4/LED_PWM.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/LED_PWM.c ****     #if(LED_PWM_UsingFixedFunction)
 485:Generated_Source\PSoC4/LED_PWM.c ****         CY_SET_REG16(LED_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/LED_PWM.c ****     #else
 487:Generated_Source\PSoC4/LED_PWM.c ****         CY_SET_REG8(LED_PWM_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1870     		strb	r0, [r3]
 488:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC4/LED_PWM.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 40000F40 		.word	1074724928
 162              		.cfi_endproc
 163              	.LFE9:
 164              		.size	LED_PWM_WritePeriod, .-LED_PWM_WritePeriod
 165              		.section	.text.LED_PWM_WriteCompare,"ax",%progbits
 166              		.align	2
 167              		.global	LED_PWM_WriteCompare
 168              		.code	16
 169              		.thumb_func
 170              		.type	LED_PWM_WriteCompare, %function
 171              	LED_PWM_WriteCompare:
 172              	.LFB10:
 490:Generated_Source\PSoC4/LED_PWM.c **** 
 491:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_UseOneCompareMode)
 492:Generated_Source\PSoC4/LED_PWM.c **** 
 493:Generated_Source\PSoC4/LED_PWM.c **** 
 494:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_WriteCompare
 496:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/LED_PWM.c ****     *
 498:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 499:Generated_Source\PSoC4/LED_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/LED_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/LED_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/LED_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/LED_PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/LED_PWM.c ****     *
 505:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 506:Generated_Source\PSoC4/LED_PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/LED_PWM.c ****     *
 508:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 509:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 510:Generated_Source\PSoC4/LED_PWM.c ****     *
 511:Generated_Source\PSoC4/LED_PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC4/LED_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 13


 513:Generated_Source\PSoC4/LED_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/LED_PWM.c ****     *
 515:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/LED_PWM.c ****                                        
 518:Generated_Source\PSoC4/LED_PWM.c ****     {
 173              		.loc 1 518 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 519:Generated_Source\PSoC4/LED_PWM.c ****         #if(LED_PWM_UsingFixedFunction)
 520:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG16(LED_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/LED_PWM.c ****         #else
 522:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG8(LED_PWM_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 522 0
 180 0000 014B     		ldr	r3, .L17
 181 0002 1870     		strb	r0, [r3]
 523:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC4/LED_PWM.c **** 
 525:Generated_Source\PSoC4/LED_PWM.c ****         #if (LED_PWM_PWMMode == LED_PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC4/LED_PWM.c ****             #if(LED_PWM_UsingFixedFunction)
 527:Generated_Source\PSoC4/LED_PWM.c ****                 CY_SET_REG16(LED_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/LED_PWM.c ****             #else
 529:Generated_Source\PSoC4/LED_PWM.c ****                 CY_SET_REG8(LED_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/LED_PWM.c ****             #endif /* (LED_PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_PWMMode == LED_PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/LED_PWM.c ****     }
 182              		.loc 1 532 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 20000F40 		.word	1074724896
 189              		.cfi_endproc
 190              	.LFE10:
 191              		.size	LED_PWM_WriteCompare, .-LED_PWM_WriteCompare
 192              		.section	.text.LED_PWM_SetInterruptMode,"ax",%progbits
 193              		.align	2
 194              		.global	LED_PWM_SetInterruptMode
 195              		.code	16
 196              		.thumb_func
 197              		.type	LED_PWM_SetInterruptMode, %function
 198              	LED_PWM_SetInterruptMode:
 199              	.LFB11:
 533:Generated_Source\PSoC4/LED_PWM.c **** 
 534:Generated_Source\PSoC4/LED_PWM.c **** 
 535:Generated_Source\PSoC4/LED_PWM.c **** #else
 536:Generated_Source\PSoC4/LED_PWM.c **** 
 537:Generated_Source\PSoC4/LED_PWM.c **** 
 538:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_WriteCompare1
 540:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/LED_PWM.c ****     *
 542:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 14


 543:Generated_Source\PSoC4/LED_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/LED_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/LED_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/LED_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/LED_PWM.c ****     *
 548:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 549:Generated_Source\PSoC4/LED_PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/LED_PWM.c ****     *
 551:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 552:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 553:Generated_Source\PSoC4/LED_PWM.c ****     *
 554:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/LED_PWM.c ****                                         
 557:Generated_Source\PSoC4/LED_PWM.c ****     {
 558:Generated_Source\PSoC4/LED_PWM.c ****         #if(LED_PWM_UsingFixedFunction)
 559:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG16(LED_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/LED_PWM.c ****         #else
 561:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG8(LED_PWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC4/LED_PWM.c ****     }
 564:Generated_Source\PSoC4/LED_PWM.c **** 
 565:Generated_Source\PSoC4/LED_PWM.c **** 
 566:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_WriteCompare2
 568:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/LED_PWM.c ****     *
 570:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 571:Generated_Source\PSoC4/LED_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/LED_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/LED_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/LED_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/LED_PWM.c ****     *  mode.
 576:Generated_Source\PSoC4/LED_PWM.c ****     *
 577:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 578:Generated_Source\PSoC4/LED_PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/LED_PWM.c ****     *
 580:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 581:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 582:Generated_Source\PSoC4/LED_PWM.c ****     *
 583:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/LED_PWM.c ****                                         
 586:Generated_Source\PSoC4/LED_PWM.c ****     {
 587:Generated_Source\PSoC4/LED_PWM.c ****         #if(LED_PWM_UsingFixedFunction)
 588:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG16(LED_PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/LED_PWM.c ****         #else
 590:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG8(LED_PWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC4/LED_PWM.c ****     }
 593:Generated_Source\PSoC4/LED_PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/LED_PWM.c **** 
 595:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_DeadBandUsed)
 596:Generated_Source\PSoC4/LED_PWM.c **** 
 597:Generated_Source\PSoC4/LED_PWM.c **** 
 598:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_WriteDeadTime
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 15


 600:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/LED_PWM.c ****     *
 602:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 603:Generated_Source\PSoC4/LED_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/LED_PWM.c ****     *
 605:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 606:Generated_Source\PSoC4/LED_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/LED_PWM.c ****     *
 608:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 609:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 610:Generated_Source\PSoC4/LED_PWM.c ****     *
 611:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/LED_PWM.c ****     {
 614:Generated_Source\PSoC4/LED_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/LED_PWM.c ****         #if(!LED_PWM_DeadBand2_4)
 616:Generated_Source\PSoC4/LED_PWM.c ****             CY_SET_REG8(LED_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/LED_PWM.c ****         #else
 618:Generated_Source\PSoC4/LED_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/LED_PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/LED_PWM.c ****             LED_PWM_DEADBAND_COUNT &= ((uint8)(~LED_PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/LED_PWM.c **** 
 622:Generated_Source\PSoC4/LED_PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/LED_PWM.c ****             #if(LED_PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << LED_PWM_DEADBAND_COUNT_SHIFT)
 625:Generated_Source\PSoC4/LED_PWM.c ****                                                     LED_PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/LED_PWM.c ****             #else
 627:Generated_Source\PSoC4/LED_PWM.c ****                 LED_PWM_DEADBAND_COUNT |= deadtime & LED_PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/LED_PWM.c ****             #endif /* (LED_PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/LED_PWM.c **** 
 630:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (!LED_PWM_DeadBand2_4) */
 631:Generated_Source\PSoC4/LED_PWM.c ****     }
 632:Generated_Source\PSoC4/LED_PWM.c **** 
 633:Generated_Source\PSoC4/LED_PWM.c **** 
 634:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadDeadTime
 636:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/LED_PWM.c ****     *
 638:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 639:Generated_Source\PSoC4/LED_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/LED_PWM.c ****     *
 641:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 642:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 643:Generated_Source\PSoC4/LED_PWM.c ****     *
 644:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 645:Generated_Source\PSoC4/LED_PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/LED_PWM.c ****     *
 647:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/LED_PWM.c ****     {
 650:Generated_Source\PSoC4/LED_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/LED_PWM.c ****         #if(!LED_PWM_DeadBand2_4)
 652:Generated_Source\PSoC4/LED_PWM.c ****             return (CY_GET_REG8(LED_PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/LED_PWM.c ****         #else
 654:Generated_Source\PSoC4/LED_PWM.c **** 
 655:Generated_Source\PSoC4/LED_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/LED_PWM.c ****             #if(LED_PWM_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 16


 657:Generated_Source\PSoC4/LED_PWM.c ****                 return ((uint8)(((uint8)(LED_PWM_DEADBAND_COUNT & LED_PWM_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/LED_PWM.c ****                                                                            LED_PWM_DEADBAND_COUNT_S
 659:Generated_Source\PSoC4/LED_PWM.c ****             #else
 660:Generated_Source\PSoC4/LED_PWM.c ****                 return (LED_PWM_DEADBAND_COUNT & LED_PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/LED_PWM.c ****             #endif /* (LED_PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (!LED_PWM_DeadBand2_4) */
 663:Generated_Source\PSoC4/LED_PWM.c ****     }
 664:Generated_Source\PSoC4/LED_PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/LED_PWM.c **** 
 666:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_UseStatus || LED_PWM_UsingFixedFunction)
 667:Generated_Source\PSoC4/LED_PWM.c **** 
 668:Generated_Source\PSoC4/LED_PWM.c **** 
 669:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_SetInterruptMode
 671:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/LED_PWM.c ****     *
 673:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 674:Generated_Source\PSoC4/LED_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/LED_PWM.c ****     *  source status register.
 676:Generated_Source\PSoC4/LED_PWM.c ****     *
 677:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 678:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/LED_PWM.c ****     *
 680:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 681:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 682:Generated_Source\PSoC4/LED_PWM.c ****     *
 683:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/LED_PWM.c ****     {
 200              		.loc 1 685 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL3:
 686:Generated_Source\PSoC4/LED_PWM.c ****         CY_SET_REG8(LED_PWM_STATUS_MASK_PTR, interruptMode);
 206              		.loc 1 686 0
 207 0000 014B     		ldr	r3, .L20
 208 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/LED_PWM.c ****     }
 209              		.loc 1 687 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L21:
 213 0006 C046     		.align	2
 214              	.L20:
 215 0008 81000F40 		.word	1074724993
 216              		.cfi_endproc
 217              	.LFE11:
 218              		.size	LED_PWM_SetInterruptMode, .-LED_PWM_SetInterruptMode
 219              		.section	.text.LED_PWM_ReadStatusRegister,"ax",%progbits
 220              		.align	2
 221              		.global	LED_PWM_ReadStatusRegister
 222              		.code	16
 223              		.thumb_func
 224              		.type	LED_PWM_ReadStatusRegister, %function
 225              	LED_PWM_ReadStatusRegister:
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 17


 226              	.LFB12:
 688:Generated_Source\PSoC4/LED_PWM.c **** 
 689:Generated_Source\PSoC4/LED_PWM.c **** 
 690:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadStatusRegister
 692:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/LED_PWM.c ****     *
 694:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 695:Generated_Source\PSoC4/LED_PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/LED_PWM.c ****     *
 697:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 698:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 699:Generated_Source\PSoC4/LED_PWM.c ****     *
 700:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 701:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/LED_PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/LED_PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/LED_PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/LED_PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/LED_PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/LED_PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/LED_PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/LED_PWM.c ****     *
 710:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/LED_PWM.c ****     {
 227              		.loc 1 712 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 713:Generated_Source\PSoC4/LED_PWM.c ****         return (CY_GET_REG8(LED_PWM_STATUS_PTR));
 232              		.loc 1 713 0
 233 0000 014B     		ldr	r3, .L23
 234 0002 1878     		ldrb	r0, [r3]
 235 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/LED_PWM.c ****     }
 236              		.loc 1 714 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L24:
 240              		.align	2
 241              	.L23:
 242 0008 61000F40 		.word	1074724961
 243              		.cfi_endproc
 244              	.LFE12:
 245              		.size	LED_PWM_ReadStatusRegister, .-LED_PWM_ReadStatusRegister
 246              		.section	.text.LED_PWM_ReadControlRegister,"ax",%progbits
 247              		.align	2
 248              		.global	LED_PWM_ReadControlRegister
 249              		.code	16
 250              		.thumb_func
 251              		.type	LED_PWM_ReadControlRegister, %function
 252              	LED_PWM_ReadControlRegister:
 253              	.LFB13:
 715:Generated_Source\PSoC4/LED_PWM.c **** 
 716:Generated_Source\PSoC4/LED_PWM.c **** #endif /* (LED_PWM_UseStatus || LED_PWM_UsingFixedFunction) */
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 18


 717:Generated_Source\PSoC4/LED_PWM.c **** 
 718:Generated_Source\PSoC4/LED_PWM.c **** 
 719:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_UseControl)
 720:Generated_Source\PSoC4/LED_PWM.c **** 
 721:Generated_Source\PSoC4/LED_PWM.c **** 
 722:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadControlRegister
 724:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/LED_PWM.c ****     *
 726:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 727:Generated_Source\PSoC4/LED_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/LED_PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/LED_PWM.c ****     *
 730:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 731:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 732:Generated_Source\PSoC4/LED_PWM.c ****     *
 733:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 734:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/LED_PWM.c ****     *
 736:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/LED_PWM.c ****     {
 254              		.loc 1 738 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 739:Generated_Source\PSoC4/LED_PWM.c ****         uint8 result;
 740:Generated_Source\PSoC4/LED_PWM.c **** 
 741:Generated_Source\PSoC4/LED_PWM.c ****         result = CY_GET_REG8(LED_PWM_CONTROL_PTR);
 259              		.loc 1 741 0
 260 0000 014B     		ldr	r3, .L26
 261 0002 1878     		ldrb	r0, [r3]
 262 0004 C0B2     		uxtb	r0, r0
 263              	.LVL4:
 742:Generated_Source\PSoC4/LED_PWM.c ****         return (result);
 743:Generated_Source\PSoC4/LED_PWM.c ****     }
 264              		.loc 1 743 0
 265              		@ sp needed
 266 0006 7047     		bx	lr
 267              	.L27:
 268              		.align	2
 269              	.L26:
 270 0008 71000F40 		.word	1074724977
 271              		.cfi_endproc
 272              	.LFE13:
 273              		.size	LED_PWM_ReadControlRegister, .-LED_PWM_ReadControlRegister
 274              		.section	.text.LED_PWM_WriteControlRegister,"ax",%progbits
 275              		.align	2
 276              		.global	LED_PWM_WriteControlRegister
 277              		.code	16
 278              		.thumb_func
 279              		.type	LED_PWM_WriteControlRegister, %function
 280              	LED_PWM_WriteControlRegister:
 281              	.LFB14:
 744:Generated_Source\PSoC4/LED_PWM.c **** 
 745:Generated_Source\PSoC4/LED_PWM.c **** 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 19


 746:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_WriteControlRegister
 748:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/LED_PWM.c ****     *
 750:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 751:Generated_Source\PSoC4/LED_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/LED_PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/LED_PWM.c ****     *
 754:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 755:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/LED_PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/LED_PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/LED_PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/LED_PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/LED_PWM.c ****     *
 761:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 762:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 763:Generated_Source\PSoC4/LED_PWM.c ****     *
 764:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/LED_PWM.c ****     void LED_PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/LED_PWM.c ****     {
 282              		.loc 1 766 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL5:
 767:Generated_Source\PSoC4/LED_PWM.c ****         CY_SET_REG8(LED_PWM_CONTROL_PTR, control);
 288              		.loc 1 767 0
 289 0000 014B     		ldr	r3, .L29
 290 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/LED_PWM.c ****     }
 291              		.loc 1 768 0
 292              		@ sp needed
 293 0004 7047     		bx	lr
 294              	.L30:
 295 0006 C046     		.align	2
 296              	.L29:
 297 0008 71000F40 		.word	1074724977
 298              		.cfi_endproc
 299              	.LFE14:
 300              		.size	LED_PWM_WriteControlRegister, .-LED_PWM_WriteControlRegister
 301              		.section	.text.LED_PWM_ReadCapture,"ax",%progbits
 302              		.align	2
 303              		.global	LED_PWM_ReadCapture
 304              		.code	16
 305              		.thumb_func
 306              		.type	LED_PWM_ReadCapture, %function
 307              	LED_PWM_ReadCapture:
 308              	.LFB15:
 769:Generated_Source\PSoC4/LED_PWM.c **** 
 770:Generated_Source\PSoC4/LED_PWM.c **** #endif /* (LED_PWM_UseControl) */
 771:Generated_Source\PSoC4/LED_PWM.c **** 
 772:Generated_Source\PSoC4/LED_PWM.c **** 
 773:Generated_Source\PSoC4/LED_PWM.c **** #if (!LED_PWM_UsingFixedFunction)
 774:Generated_Source\PSoC4/LED_PWM.c **** 
 775:Generated_Source\PSoC4/LED_PWM.c **** 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 20


 776:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadCapture
 778:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/LED_PWM.c ****     *
 780:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 781:Generated_Source\PSoC4/LED_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/LED_PWM.c ****     *
 783:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 784:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 785:Generated_Source\PSoC4/LED_PWM.c ****     *
 786:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 787:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/LED_PWM.c ****     *
 789:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadCapture(void) 
 791:Generated_Source\PSoC4/LED_PWM.c ****     {
 309              		.loc 1 791 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 792:Generated_Source\PSoC4/LED_PWM.c ****         return (CY_GET_REG8(LED_PWM_CAPTURE_LSB_PTR));
 314              		.loc 1 792 0
 315 0000 014B     		ldr	r3, .L32
 316 0002 1878     		ldrb	r0, [r3]
 317 0004 C0B2     		uxtb	r0, r0
 793:Generated_Source\PSoC4/LED_PWM.c ****     }
 318              		.loc 1 793 0
 319              		@ sp needed
 320 0006 7047     		bx	lr
 321              	.L33:
 322              		.align	2
 323              	.L32:
 324 0008 50000F40 		.word	1074724944
 325              		.cfi_endproc
 326              	.LFE15:
 327              		.size	LED_PWM_ReadCapture, .-LED_PWM_ReadCapture
 328              		.section	.text.LED_PWM_ClearFIFO,"ax",%progbits
 329              		.align	2
 330              		.global	LED_PWM_ClearFIFO
 331              		.code	16
 332              		.thumb_func
 333              		.type	LED_PWM_ClearFIFO, %function
 334              	LED_PWM_ClearFIFO:
 335              	.LFB8:
 454:Generated_Source\PSoC4/LED_PWM.c ****             while(0u != (LED_PWM_ReadStatusRegister() & LED_PWM_STATUS_FIFONEMPTY))
 336              		.loc 1 454 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/LED_PWM.c ****             {
 344              		.loc 1 455 0
 345 0002 01E0     		b	.L35
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 21


 346              	.L36:
 457:Generated_Source\PSoC4/LED_PWM.c ****             }
 347              		.loc 1 457 0
 348 0004 FFF7FEFF 		bl	LED_PWM_ReadCapture
 349              	.LVL6:
 350              	.L35:
 455:Generated_Source\PSoC4/LED_PWM.c ****             {
 351              		.loc 1 455 0
 352 0008 FFF7FEFF 		bl	LED_PWM_ReadStatusRegister
 353              	.LVL7:
 354 000c C306     		lsls	r3, r0, #27
 355 000e F9D4     		bmi	.L36
 459:Generated_Source\PSoC4/LED_PWM.c **** 
 356              		.loc 1 459 0
 357              		@ sp needed
 358 0010 10BD     		pop	{r4, pc}
 359              		.cfi_endproc
 360              	.LFE8:
 361              		.size	LED_PWM_ClearFIFO, .-LED_PWM_ClearFIFO
 362 0012 C046     		.section	.text.LED_PWM_Init,"ax",%progbits
 363              		.align	2
 364              		.global	LED_PWM_Init
 365              		.code	16
 366              		.thumb_func
 367              		.type	LED_PWM_Init, %function
 368              	LED_PWM_Init:
 369              	.LFB3:
  85:Generated_Source\PSoC4/LED_PWM.c ****     #if (LED_PWM_UsingFixedFunction || LED_PWM_UseControl)
 370              		.loc 1 85 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 10B5     		push	{r4, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/LED_PWM.c ****                 ((uint8)(~LED_PWM_CTRL_CMPMODE1_MASK));
 378              		.loc 1 117 0
 379 0002 1349     		ldr	r1, .L38
 380 0004 0B78     		ldrb	r3, [r1]
 381 0006 3F22     		movs	r2, #63
 382 0008 9343     		bics	r3, r2
 383              	.LVL8:
 119:Generated_Source\PSoC4/LED_PWM.c ****                                    LED_PWM_DEFAULT_COMPARE1_MODE;
 384              		.loc 1 119 0
 385 000a 0922     		movs	r2, #9
 386 000c 1343     		orrs	r3, r2
 387              	.LVL9:
 388 000e DBB2     		uxtb	r3, r3
 389 0010 0B70     		strb	r3, [r1]
 126:Generated_Source\PSoC4/LED_PWM.c ****         #else /* (LED_PWM_Resolution == 16)*/
 390              		.loc 1 126 0
 391 0012 104A     		ldr	r2, .L38+4
 392 0014 1178     		ldrb	r1, [r2]
 393 0016 0123     		movs	r3, #1
 394 0018 0B43     		orrs	r3, r1
 395 001a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 22


 396 001c 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (!LED_PWM_UsingFixedFunction) */
 397              		.loc 1 133 0
 398 001e FF20     		movs	r0, #255
 399 0020 FFF7FEFF 		bl	LED_PWM_WriteCounter
 400              	.LVL10:
 136:Generated_Source\PSoC4/LED_PWM.c **** 
 401              		.loc 1 136 0
 402 0024 FF20     		movs	r0, #255
 403 0026 FFF7FEFF 		bl	LED_PWM_WritePeriod
 404              	.LVL11:
 139:Generated_Source\PSoC4/LED_PWM.c ****         #else
 405              		.loc 1 139 0
 406 002a 7F20     		movs	r0, #127
 407 002c FFF7FEFF 		bl	LED_PWM_WriteCompare
 408              	.LVL12:
 154:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UseStatus || LED_PWM_UsingFixedFunction) */
 409              		.loc 1 154 0
 410 0030 0020     		movs	r0, #0
 411 0032 FFF7FEFF 		bl	LED_PWM_SetInterruptMode
 412              	.LVL13:
 167:Generated_Source\PSoC4/LED_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 413              		.loc 1 167 0
 414 0036 FFF7FEFF 		bl	CyEnterCriticalSection
 415              	.LVL14:
 169:Generated_Source\PSoC4/LED_PWM.c **** 
 416              		.loc 1 169 0
 417 003a 074A     		ldr	r2, .L38+8
 418 003c 1178     		ldrb	r1, [r2]
 419 003e 1023     		movs	r3, #16
 420 0040 0B43     		orrs	r3, r1
 421 0042 DBB2     		uxtb	r3, r3
 422 0044 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC4/LED_PWM.c **** 
 423              		.loc 1 172 0
 424 0046 FFF7FEFF 		bl	CyExitCriticalSection
 425              	.LVL15:
 176:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UseStatus) */
 426              		.loc 1 176 0
 427 004a FFF7FEFF 		bl	LED_PWM_ClearFIFO
 428              	.LVL16:
 179:Generated_Source\PSoC4/LED_PWM.c **** 
 429              		.loc 1 179 0
 430              		@ sp needed
 431 004e 10BD     		pop	{r4, pc}
 432              	.L39:
 433              		.align	2
 434              	.L38:
 435 0050 71000F40 		.word	1074724977
 436 0054 90000F40 		.word	1074725008
 437 0058 91000F40 		.word	1074725009
 438              		.cfi_endproc
 439              	.LFE3:
 440              		.size	LED_PWM_Init, .-LED_PWM_Init
 441              		.section	.text.LED_PWM_Start,"ax",%progbits
 442              		.align	2
 443              		.global	LED_PWM_Start
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 23


 444              		.code	16
 445              		.thumb_func
 446              		.type	LED_PWM_Start, %function
 447              	LED_PWM_Start:
 448              	.LFB2:
  56:Generated_Source\PSoC4/LED_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 449              		.loc 1 56 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 10B5     		push	{r4, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/LED_PWM.c ****     {
 457              		.loc 1 58 0
 458 0002 064B     		ldr	r3, .L42
 459 0004 1B78     		ldrb	r3, [r3]
 460 0006 002B     		cmp	r3, #0
 461 0008 04D1     		bne	.L41
  60:Generated_Source\PSoC4/LED_PWM.c ****         LED_PWM_initVar = 1u;
 462              		.loc 1 60 0
 463 000a FFF7FEFF 		bl	LED_PWM_Init
 464              	.LVL17:
  61:Generated_Source\PSoC4/LED_PWM.c ****     }
 465              		.loc 1 61 0
 466 000e 0122     		movs	r2, #1
 467 0010 024B     		ldr	r3, .L42
 468 0012 1A70     		strb	r2, [r3]
 469              	.L41:
  63:Generated_Source\PSoC4/LED_PWM.c **** 
 470              		.loc 1 63 0
 471 0014 FFF7FEFF 		bl	LED_PWM_Enable
 472              	.LVL18:
  65:Generated_Source\PSoC4/LED_PWM.c **** 
 473              		.loc 1 65 0
 474              		@ sp needed
 475 0018 10BD     		pop	{r4, pc}
 476              	.L43:
 477 001a C046     		.align	2
 478              	.L42:
 479 001c 00000000 		.word	.LANCHOR0
 480              		.cfi_endproc
 481              	.LFE2:
 482              		.size	LED_PWM_Start, .-LED_PWM_Start
 483              		.section	.text.LED_PWM_ReadCompare,"ax",%progbits
 484              		.align	2
 485              		.global	LED_PWM_ReadCompare
 486              		.code	16
 487              		.thumb_func
 488              		.type	LED_PWM_ReadCompare, %function
 489              	LED_PWM_ReadCompare:
 490              	.LFB16:
 794:Generated_Source\PSoC4/LED_PWM.c **** 
 795:Generated_Source\PSoC4/LED_PWM.c **** #endif /* (!LED_PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC4/LED_PWM.c **** 
 797:Generated_Source\PSoC4/LED_PWM.c **** 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 24


 798:Generated_Source\PSoC4/LED_PWM.c **** #if (LED_PWM_UseOneCompareMode)
 799:Generated_Source\PSoC4/LED_PWM.c **** 
 800:Generated_Source\PSoC4/LED_PWM.c **** 
 801:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadCompare
 803:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/LED_PWM.c ****     *
 805:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 806:Generated_Source\PSoC4/LED_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/LED_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/LED_PWM.c ****     *
 809:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 810:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 811:Generated_Source\PSoC4/LED_PWM.c ****     *
 812:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 813:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/LED_PWM.c ****     *
 815:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadCompare(void) 
 817:Generated_Source\PSoC4/LED_PWM.c ****     {
 491              		.loc 1 817 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 818:Generated_Source\PSoC4/LED_PWM.c ****         #if(LED_PWM_UsingFixedFunction)
 819:Generated_Source\PSoC4/LED_PWM.c ****             return ((uint8)CY_GET_REG16(LED_PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/LED_PWM.c ****         #else
 821:Generated_Source\PSoC4/LED_PWM.c ****             return (CY_GET_REG8(LED_PWM_COMPARE1_LSB_PTR));
 496              		.loc 1 821 0
 497 0000 014B     		ldr	r3, .L45
 498 0002 1878     		ldrb	r0, [r3]
 499 0004 C0B2     		uxtb	r0, r0
 822:Generated_Source\PSoC4/LED_PWM.c ****         #endif /* (LED_PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC4/LED_PWM.c ****     }
 500              		.loc 1 823 0
 501              		@ sp needed
 502 0006 7047     		bx	lr
 503              	.L46:
 504              		.align	2
 505              	.L45:
 506 0008 20000F40 		.word	1074724896
 507              		.cfi_endproc
 508              	.LFE16:
 509              		.size	LED_PWM_ReadCompare, .-LED_PWM_ReadCompare
 510              		.section	.text.LED_PWM_ReadPeriod,"ax",%progbits
 511              		.align	2
 512              		.global	LED_PWM_ReadPeriod
 513              		.code	16
 514              		.thumb_func
 515              		.type	LED_PWM_ReadPeriod, %function
 516              	LED_PWM_ReadPeriod:
 517              	.LFB17:
 824:Generated_Source\PSoC4/LED_PWM.c **** 
 825:Generated_Source\PSoC4/LED_PWM.c **** #else
 826:Generated_Source\PSoC4/LED_PWM.c **** 
 827:Generated_Source\PSoC4/LED_PWM.c **** 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 25


 828:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadCompare1
 830:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/LED_PWM.c ****     *
 832:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 833:Generated_Source\PSoC4/LED_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/LED_PWM.c ****     *
 835:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 836:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 837:Generated_Source\PSoC4/LED_PWM.c ****     *
 838:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 839:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/LED_PWM.c ****     *
 841:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC4/LED_PWM.c ****     {
 844:Generated_Source\PSoC4/LED_PWM.c ****         return (CY_GET_REG8(LED_PWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/LED_PWM.c ****     }
 846:Generated_Source\PSoC4/LED_PWM.c **** 
 847:Generated_Source\PSoC4/LED_PWM.c **** 
 848:Generated_Source\PSoC4/LED_PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/LED_PWM.c ****     * Function Name: LED_PWM_ReadCompare2
 850:Generated_Source\PSoC4/LED_PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/LED_PWM.c ****     *
 852:Generated_Source\PSoC4/LED_PWM.c ****     * Summary:
 853:Generated_Source\PSoC4/LED_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/LED_PWM.c ****     *
 855:Generated_Source\PSoC4/LED_PWM.c ****     * Parameters:
 856:Generated_Source\PSoC4/LED_PWM.c ****     *  None
 857:Generated_Source\PSoC4/LED_PWM.c ****     *
 858:Generated_Source\PSoC4/LED_PWM.c ****     * Return:
 859:Generated_Source\PSoC4/LED_PWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/LED_PWM.c ****     *
 861:Generated_Source\PSoC4/LED_PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/LED_PWM.c ****     uint8 LED_PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC4/LED_PWM.c ****     {
 864:Generated_Source\PSoC4/LED_PWM.c ****         return (CY_GET_REG8(LED_PWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/LED_PWM.c ****     }
 866:Generated_Source\PSoC4/LED_PWM.c **** 
 867:Generated_Source\PSoC4/LED_PWM.c **** #endif /* (LED_PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC4/LED_PWM.c **** 
 869:Generated_Source\PSoC4/LED_PWM.c **** 
 870:Generated_Source\PSoC4/LED_PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/LED_PWM.c **** * Function Name: LED_PWM_ReadPeriod
 872:Generated_Source\PSoC4/LED_PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC4/LED_PWM.c **** *
 874:Generated_Source\PSoC4/LED_PWM.c **** * Summary:
 875:Generated_Source\PSoC4/LED_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/LED_PWM.c **** *
 877:Generated_Source\PSoC4/LED_PWM.c **** * Parameters:
 878:Generated_Source\PSoC4/LED_PWM.c **** *  None
 879:Generated_Source\PSoC4/LED_PWM.c **** *
 880:Generated_Source\PSoC4/LED_PWM.c **** * Return:
 881:Generated_Source\PSoC4/LED_PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/LED_PWM.c **** *
 883:Generated_Source\PSoC4/LED_PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/LED_PWM.c **** uint8 LED_PWM_ReadPeriod(void) 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 26


 885:Generated_Source\PSoC4/LED_PWM.c **** {
 518              		.loc 1 885 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 886:Generated_Source\PSoC4/LED_PWM.c ****     #if(LED_PWM_UsingFixedFunction)
 887:Generated_Source\PSoC4/LED_PWM.c ****         return ((uint8)CY_GET_REG16(LED_PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/LED_PWM.c ****     #else
 889:Generated_Source\PSoC4/LED_PWM.c ****         return (CY_GET_REG8(LED_PWM_PERIOD_LSB_PTR));
 523              		.loc 1 889 0
 524 0000 014B     		ldr	r3, .L48
 525 0002 1878     		ldrb	r0, [r3]
 526 0004 C0B2     		uxtb	r0, r0
 890:Generated_Source\PSoC4/LED_PWM.c ****     #endif /* (LED_PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC4/LED_PWM.c **** }
 527              		.loc 1 891 0
 528              		@ sp needed
 529 0006 7047     		bx	lr
 530              	.L49:
 531              		.align	2
 532              	.L48:
 533 0008 40000F40 		.word	1074724928
 534              		.cfi_endproc
 535              	.LFE17:
 536              		.size	LED_PWM_ReadPeriod, .-LED_PWM_ReadPeriod
 537              		.global	LED_PWM_initVar
 538              		.bss
 539              		.set	.LANCHOR0,. + 0
 540              		.type	LED_PWM_initVar, %object
 541              		.size	LED_PWM_initVar, 1
 542              	LED_PWM_initVar:
 543 0000 00       		.space	1
 544              		.text
 545              	.Letext0:
 546              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 547              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 548              		.section	.debug_info,"",%progbits
 549              	.Ldebug_info0:
 550 0000 30030000 		.4byte	0x330
 551 0004 0400     		.2byte	0x4
 552 0006 00000000 		.4byte	.Ldebug_abbrev0
 553 000a 04       		.byte	0x4
 554 000b 01       		.uleb128 0x1
 555 000c 33020000 		.4byte	.LASF41
 556 0010 0C       		.byte	0xc
 557 0011 0D000000 		.4byte	.LASF42
 558 0015 5D010000 		.4byte	.LASF43
 559 0019 00000000 		.4byte	.Ldebug_ranges0+0
 560 001d 00000000 		.4byte	0
 561 0021 00000000 		.4byte	.Ldebug_line0
 562 0025 02       		.uleb128 0x2
 563 0026 01       		.byte	0x1
 564 0027 06       		.byte	0x6
 565 0028 58030000 		.4byte	.LASF0
 566 002c 02       		.uleb128 0x2
 567 002d 01       		.byte	0x1
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 27


 568 002e 08       		.byte	0x8
 569 002f CF000000 		.4byte	.LASF1
 570 0033 02       		.uleb128 0x2
 571 0034 02       		.byte	0x2
 572 0035 05       		.byte	0x5
 573 0036 EB020000 		.4byte	.LASF2
 574 003a 02       		.uleb128 0x2
 575 003b 02       		.byte	0x2
 576 003c 07       		.byte	0x7
 577 003d 56000000 		.4byte	.LASF3
 578 0041 02       		.uleb128 0x2
 579 0042 04       		.byte	0x4
 580 0043 05       		.byte	0x5
 581 0044 25030000 		.4byte	.LASF4
 582 0048 02       		.uleb128 0x2
 583 0049 04       		.byte	0x4
 584 004a 07       		.byte	0x7
 585 004b C4010000 		.4byte	.LASF5
 586 004f 02       		.uleb128 0x2
 587 0050 08       		.byte	0x8
 588 0051 05       		.byte	0x5
 589 0052 CF020000 		.4byte	.LASF6
 590 0056 02       		.uleb128 0x2
 591 0057 08       		.byte	0x8
 592 0058 07       		.byte	0x7
 593 0059 B8000000 		.4byte	.LASF7
 594 005d 03       		.uleb128 0x3
 595 005e 04       		.byte	0x4
 596 005f 05       		.byte	0x5
 597 0060 696E7400 		.ascii	"int\000"
 598 0064 02       		.uleb128 0x2
 599 0065 04       		.byte	0x4
 600 0066 07       		.byte	0x7
 601 0067 D6010000 		.4byte	.LASF8
 602 006b 04       		.uleb128 0x4
 603 006c 02030000 		.4byte	.LASF12
 604 0070 02       		.byte	0x2
 605 0071 E401     		.2byte	0x1e4
 606 0073 2C000000 		.4byte	0x2c
 607 0077 02       		.uleb128 0x2
 608 0078 04       		.byte	0x4
 609 0079 04       		.byte	0x4
 610 007a 49000000 		.4byte	.LASF9
 611 007e 02       		.uleb128 0x2
 612 007f 08       		.byte	0x8
 613 0080 04       		.byte	0x4
 614 0081 44010000 		.4byte	.LASF10
 615 0085 02       		.uleb128 0x2
 616 0086 01       		.byte	0x1
 617 0087 08       		.byte	0x8
 618 0088 2E030000 		.4byte	.LASF11
 619 008c 04       		.uleb128 0x4
 620 008d DD000000 		.4byte	.LASF13
 621 0091 02       		.byte	0x2
 622 0092 8E02     		.2byte	0x28e
 623 0094 98000000 		.4byte	0x98
 624 0098 05       		.uleb128 0x5
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 28


 625 0099 6B000000 		.4byte	0x6b
 626 009d 02       		.uleb128 0x2
 627 009e 08       		.byte	0x8
 628 009f 04       		.byte	0x4
 629 00a0 4C030000 		.4byte	.LASF14
 630 00a4 02       		.uleb128 0x2
 631 00a5 04       		.byte	0x4
 632 00a6 07       		.byte	0x7
 633 00a7 C6020000 		.4byte	.LASF15
 634 00ab 06       		.uleb128 0x6
 635 00ac 24020000 		.4byte	.LASF16
 636 00b0 01       		.byte	0x1
 637 00b1 C7       		.byte	0xc7
 638 00b2 00000000 		.4byte	.LFB4
 639 00b6 14000000 		.4byte	.LFE4-.LFB4
 640 00ba 01       		.uleb128 0x1
 641 00bb 9C       		.byte	0x9c
 642 00bc 06       		.uleb128 0x6
 643 00bd F5020000 		.4byte	.LASF17
 644 00c1 01       		.byte	0x1
 645 00c2 E9       		.byte	0xe9
 646 00c3 00000000 		.4byte	.LFB5
 647 00c7 10000000 		.4byte	.LFE5-.LFB5
 648 00cb 01       		.uleb128 0x1
 649 00cc 9C       		.byte	0x9c
 650 00cd 07       		.uleb128 0x7
 651 00ce 08030000 		.4byte	.LASF18
 652 00d2 01       		.byte	0x1
 653 00d3 9301     		.2byte	0x193
 654 00d5 00000000 		.4byte	.LFB6
 655 00d9 0C000000 		.4byte	.LFE6-.LFB6
 656 00dd 01       		.uleb128 0x1
 657 00de 9C       		.byte	0x9c
 658 00df F2000000 		.4byte	0xf2
 659 00e3 08       		.uleb128 0x8
 660 00e4 3C010000 		.4byte	.LASF20
 661 00e8 01       		.byte	0x1
 662 00e9 9301     		.2byte	0x193
 663 00eb 6B000000 		.4byte	0x6b
 664 00ef 01       		.uleb128 0x1
 665 00f0 50       		.byte	0x50
 666 00f1 00       		.byte	0
 667 00f2 09       		.uleb128 0x9
 668 00f3 FD000000 		.4byte	.LASF26
 669 00f7 01       		.byte	0x1
 670 00f8 A901     		.2byte	0x1a9
 671 00fa 6B000000 		.4byte	0x6b
 672 00fe 00000000 		.4byte	.LFB7
 673 0102 14000000 		.4byte	.LFE7-.LFB7
 674 0106 01       		.uleb128 0x1
 675 0107 9C       		.byte	0x9c
 676 0108 07       		.uleb128 0x7
 677 0109 6C030000 		.4byte	.LASF19
 678 010d 01       		.byte	0x1
 679 010e E201     		.2byte	0x1e2
 680 0110 00000000 		.4byte	.LFB9
 681 0114 0C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 29


 682 0118 01       		.uleb128 0x1
 683 0119 9C       		.byte	0x9c
 684 011a 2D010000 		.4byte	0x12d
 685 011e 08       		.uleb128 0x8
 686 011f 4F000000 		.4byte	.LASF21
 687 0123 01       		.byte	0x1
 688 0124 E201     		.2byte	0x1e2
 689 0126 6B000000 		.4byte	0x6b
 690 012a 01       		.uleb128 0x1
 691 012b 50       		.byte	0x50
 692 012c 00       		.byte	0
 693 012d 07       		.uleb128 0x7
 694 012e 69000000 		.4byte	.LASF22
 695 0132 01       		.byte	0x1
 696 0133 0402     		.2byte	0x204
 697 0135 00000000 		.4byte	.LFB10
 698 0139 0C000000 		.4byte	.LFE10-.LFB10
 699 013d 01       		.uleb128 0x1
 700 013e 9C       		.byte	0x9c
 701 013f 52010000 		.4byte	0x152
 702 0143 08       		.uleb128 0x8
 703 0144 64030000 		.4byte	.LASF23
 704 0148 01       		.byte	0x1
 705 0149 0402     		.2byte	0x204
 706 014b 6B000000 		.4byte	0x6b
 707 014f 01       		.uleb128 0x1
 708 0150 50       		.byte	0x50
 709 0151 00       		.byte	0
 710 0152 07       		.uleb128 0x7
 711 0153 33030000 		.4byte	.LASF24
 712 0157 01       		.byte	0x1
 713 0158 AC02     		.2byte	0x2ac
 714 015a 00000000 		.4byte	.LFB11
 715 015e 0C000000 		.4byte	.LFE11-.LFB11
 716 0162 01       		.uleb128 0x1
 717 0163 9C       		.byte	0x9c
 718 0164 77010000 		.4byte	0x177
 719 0168 08       		.uleb128 0x8
 720 0169 DD020000 		.4byte	.LASF25
 721 016d 01       		.byte	0x1
 722 016e AC02     		.2byte	0x2ac
 723 0170 6B000000 		.4byte	0x6b
 724 0174 01       		.uleb128 0x1
 725 0175 50       		.byte	0x50
 726 0176 00       		.byte	0
 727 0177 09       		.uleb128 0x9
 728 0178 E2000000 		.4byte	.LASF27
 729 017c 01       		.byte	0x1
 730 017d C702     		.2byte	0x2c7
 731 017f 6B000000 		.4byte	0x6b
 732 0183 00000000 		.4byte	.LFB12
 733 0187 0C000000 		.4byte	.LFE12-.LFB12
 734 018b 01       		.uleb128 0x1
 735 018c 9C       		.byte	0x9c
 736 018d 0A       		.uleb128 0xa
 737 018e A8010000 		.4byte	.LASF44
 738 0192 01       		.byte	0x1
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 30


 739 0193 E102     		.2byte	0x2e1
 740 0195 6B000000 		.4byte	0x6b
 741 0199 00000000 		.4byte	.LFB13
 742 019d 0C000000 		.4byte	.LFE13-.LFB13
 743 01a1 01       		.uleb128 0x1
 744 01a2 9C       		.byte	0x9c
 745 01a3 B6010000 		.4byte	0x1b6
 746 01a7 0B       		.uleb128 0xb
 747 01a8 2E000000 		.4byte	.LASF33
 748 01ac 01       		.byte	0x1
 749 01ad E302     		.2byte	0x2e3
 750 01af 6B000000 		.4byte	0x6b
 751 01b3 01       		.uleb128 0x1
 752 01b4 50       		.byte	0x50
 753 01b5 00       		.byte	0
 754 01b6 07       		.uleb128 0x7
 755 01b7 11010000 		.4byte	.LASF28
 756 01bb 01       		.byte	0x1
 757 01bc FD02     		.2byte	0x2fd
 758 01be 00000000 		.4byte	.LFB14
 759 01c2 0C000000 		.4byte	.LFE14-.LFB14
 760 01c6 01       		.uleb128 0x1
 761 01c7 9C       		.byte	0x9c
 762 01c8 DB010000 		.4byte	0x1db
 763 01cc 08       		.uleb128 0x8
 764 01cd 1D030000 		.4byte	.LASF29
 765 01d1 01       		.byte	0x1
 766 01d2 FD02     		.2byte	0x2fd
 767 01d4 6B000000 		.4byte	0x6b
 768 01d8 01       		.uleb128 0x1
 769 01d9 50       		.byte	0x50
 770 01da 00       		.byte	0
 771 01db 09       		.uleb128 0x9
 772 01dc 35000000 		.4byte	.LASF30
 773 01e0 01       		.byte	0x1
 774 01e1 1603     		.2byte	0x316
 775 01e3 6B000000 		.4byte	0x6b
 776 01e7 00000000 		.4byte	.LFB15
 777 01eb 0C000000 		.4byte	.LFE15-.LFB15
 778 01ef 01       		.uleb128 0x1
 779 01f0 9C       		.byte	0x9c
 780 01f1 07       		.uleb128 0x7
 781 01f2 4B010000 		.4byte	.LASF31
 782 01f6 01       		.byte	0x1
 783 01f7 C501     		.2byte	0x1c5
 784 01f9 00000000 		.4byte	.LFB8
 785 01fd 12000000 		.4byte	.LFE8-.LFB8
 786 0201 01       		.uleb128 0x1
 787 0202 9C       		.byte	0x9c
 788 0203 1A020000 		.4byte	0x21a
 789 0207 0C       		.uleb128 0xc
 790 0208 08000000 		.4byte	.LVL6
 791 020c DB010000 		.4byte	0x1db
 792 0210 0C       		.uleb128 0xc
 793 0211 0C000000 		.4byte	.LVL7
 794 0215 77010000 		.4byte	0x177
 795 0219 00       		.byte	0
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 31


 796 021a 0D       		.uleb128 0xd
 797 021b 00000000 		.4byte	.LASF32
 798 021f 01       		.byte	0x1
 799 0220 54       		.byte	0x54
 800 0221 00000000 		.4byte	.LFB3
 801 0225 5C000000 		.4byte	.LFE3-.LFB3
 802 0229 01       		.uleb128 0x1
 803 022a 9C       		.byte	0x9c
 804 022b B8020000 		.4byte	0x2b8
 805 022f 0E       		.uleb128 0xe
 806 0230 C1020000 		.4byte	.LASF34
 807 0234 01       		.byte	0x1
 808 0235 57       		.byte	0x57
 809 0236 6B000000 		.4byte	0x6b
 810 023a 00000000 		.4byte	.LLST0
 811 023e 0E       		.uleb128 0xe
 812 023f 7E000000 		.4byte	.LASF35
 813 0243 01       		.byte	0x1
 814 0244 5D       		.byte	0x5d
 815 0245 6B000000 		.4byte	0x6b
 816 0249 13000000 		.4byte	.LLST1
 817 024d 0F       		.uleb128 0xf
 818 024e 24000000 		.4byte	.LVL10
 819 0252 CD000000 		.4byte	0xcd
 820 0256 61020000 		.4byte	0x261
 821 025a 10       		.uleb128 0x10
 822 025b 01       		.uleb128 0x1
 823 025c 50       		.byte	0x50
 824 025d 02       		.uleb128 0x2
 825 025e 09       		.byte	0x9
 826 025f FF       		.byte	0xff
 827 0260 00       		.byte	0
 828 0261 0F       		.uleb128 0xf
 829 0262 2A000000 		.4byte	.LVL11
 830 0266 08010000 		.4byte	0x108
 831 026a 75020000 		.4byte	0x275
 832 026e 10       		.uleb128 0x10
 833 026f 01       		.uleb128 0x1
 834 0270 50       		.byte	0x50
 835 0271 02       		.uleb128 0x2
 836 0272 09       		.byte	0x9
 837 0273 FF       		.byte	0xff
 838 0274 00       		.byte	0
 839 0275 0F       		.uleb128 0xf
 840 0276 30000000 		.4byte	.LVL12
 841 027a 2D010000 		.4byte	0x12d
 842 027e 89020000 		.4byte	0x289
 843 0282 10       		.uleb128 0x10
 844 0283 01       		.uleb128 0x1
 845 0284 50       		.byte	0x50
 846 0285 02       		.uleb128 0x2
 847 0286 08       		.byte	0x8
 848 0287 7F       		.byte	0x7f
 849 0288 00       		.byte	0
 850 0289 0F       		.uleb128 0xf
 851 028a 36000000 		.4byte	.LVL13
 852 028e 52010000 		.4byte	0x152
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 32


 853 0292 9C020000 		.4byte	0x29c
 854 0296 10       		.uleb128 0x10
 855 0297 01       		.uleb128 0x1
 856 0298 50       		.byte	0x50
 857 0299 01       		.uleb128 0x1
 858 029a 30       		.byte	0x30
 859 029b 00       		.byte	0
 860 029c 0C       		.uleb128 0xc
 861 029d 3A000000 		.4byte	.LVL14
 862 02a1 1D030000 		.4byte	0x31d
 863 02a5 0C       		.uleb128 0xc
 864 02a6 4A000000 		.4byte	.LVL15
 865 02aa 28030000 		.4byte	0x328
 866 02ae 0C       		.uleb128 0xc
 867 02af 4E000000 		.4byte	.LVL16
 868 02b3 F1010000 		.4byte	0x1f1
 869 02b7 00       		.byte	0
 870 02b8 0D       		.uleb128 0xd
 871 02b9 2E010000 		.4byte	.LASF36
 872 02bd 01       		.byte	0x1
 873 02be 37       		.byte	0x37
 874 02bf 00000000 		.4byte	.LFB2
 875 02c3 20000000 		.4byte	.LFE2-.LFB2
 876 02c7 01       		.uleb128 0x1
 877 02c8 9C       		.byte	0x9c
 878 02c9 E0020000 		.4byte	0x2e0
 879 02cd 0C       		.uleb128 0xc
 880 02ce 0E000000 		.4byte	.LVL17
 881 02d2 1A020000 		.4byte	0x21a
 882 02d6 0C       		.uleb128 0xc
 883 02d7 18000000 		.4byte	.LVL18
 884 02db AB000000 		.4byte	0xab
 885 02df 00       		.byte	0
 886 02e0 09       		.uleb128 0x9
 887 02e1 F9010000 		.4byte	.LASF37
 888 02e5 01       		.byte	0x1
 889 02e6 3003     		.2byte	0x330
 890 02e8 6B000000 		.4byte	0x6b
 891 02ec 00000000 		.4byte	.LFB16
 892 02f0 0C000000 		.4byte	.LFE16-.LFB16
 893 02f4 01       		.uleb128 0x1
 894 02f5 9C       		.byte	0x9c
 895 02f6 09       		.uleb128 0x9
 896 02f7 A5000000 		.4byte	.LASF38
 897 02fb 01       		.byte	0x1
 898 02fc 7403     		.2byte	0x374
 899 02fe 6B000000 		.4byte	0x6b
 900 0302 00000000 		.4byte	.LFB17
 901 0306 0C000000 		.4byte	.LFE17-.LFB17
 902 030a 01       		.uleb128 0x1
 903 030b 9C       		.byte	0x9c
 904 030c 11       		.uleb128 0x11
 905 030d 95000000 		.4byte	.LASF45
 906 0311 01       		.byte	0x1
 907 0312 20       		.byte	0x20
 908 0313 6B000000 		.4byte	0x6b
 909 0317 05       		.uleb128 0x5
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 33


 910 0318 03       		.byte	0x3
 911 0319 00000000 		.4byte	LED_PWM_initVar
 912 031d 12       		.uleb128 0x12
 913 031e 0D020000 		.4byte	.LASF39
 914 0322 0D020000 		.4byte	.LASF39
 915 0326 03       		.byte	0x3
 916 0327 E5       		.byte	0xe5
 917 0328 12       		.uleb128 0x12
 918 0329 E3010000 		.4byte	.LASF40
 919 032d E3010000 		.4byte	.LASF40
 920 0331 03       		.byte	0x3
 921 0332 E6       		.byte	0xe6
 922 0333 00       		.byte	0
 923              		.section	.debug_abbrev,"",%progbits
 924              	.Ldebug_abbrev0:
 925 0000 01       		.uleb128 0x1
 926 0001 11       		.uleb128 0x11
 927 0002 01       		.byte	0x1
 928 0003 25       		.uleb128 0x25
 929 0004 0E       		.uleb128 0xe
 930 0005 13       		.uleb128 0x13
 931 0006 0B       		.uleb128 0xb
 932 0007 03       		.uleb128 0x3
 933 0008 0E       		.uleb128 0xe
 934 0009 1B       		.uleb128 0x1b
 935 000a 0E       		.uleb128 0xe
 936 000b 55       		.uleb128 0x55
 937 000c 17       		.uleb128 0x17
 938 000d 11       		.uleb128 0x11
 939 000e 01       		.uleb128 0x1
 940 000f 10       		.uleb128 0x10
 941 0010 17       		.uleb128 0x17
 942 0011 00       		.byte	0
 943 0012 00       		.byte	0
 944 0013 02       		.uleb128 0x2
 945 0014 24       		.uleb128 0x24
 946 0015 00       		.byte	0
 947 0016 0B       		.uleb128 0xb
 948 0017 0B       		.uleb128 0xb
 949 0018 3E       		.uleb128 0x3e
 950 0019 0B       		.uleb128 0xb
 951 001a 03       		.uleb128 0x3
 952 001b 0E       		.uleb128 0xe
 953 001c 00       		.byte	0
 954 001d 00       		.byte	0
 955 001e 03       		.uleb128 0x3
 956 001f 24       		.uleb128 0x24
 957 0020 00       		.byte	0
 958 0021 0B       		.uleb128 0xb
 959 0022 0B       		.uleb128 0xb
 960 0023 3E       		.uleb128 0x3e
 961 0024 0B       		.uleb128 0xb
 962 0025 03       		.uleb128 0x3
 963 0026 08       		.uleb128 0x8
 964 0027 00       		.byte	0
 965 0028 00       		.byte	0
 966 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 34


 967 002a 16       		.uleb128 0x16
 968 002b 00       		.byte	0
 969 002c 03       		.uleb128 0x3
 970 002d 0E       		.uleb128 0xe
 971 002e 3A       		.uleb128 0x3a
 972 002f 0B       		.uleb128 0xb
 973 0030 3B       		.uleb128 0x3b
 974 0031 05       		.uleb128 0x5
 975 0032 49       		.uleb128 0x49
 976 0033 13       		.uleb128 0x13
 977 0034 00       		.byte	0
 978 0035 00       		.byte	0
 979 0036 05       		.uleb128 0x5
 980 0037 35       		.uleb128 0x35
 981 0038 00       		.byte	0
 982 0039 49       		.uleb128 0x49
 983 003a 13       		.uleb128 0x13
 984 003b 00       		.byte	0
 985 003c 00       		.byte	0
 986 003d 06       		.uleb128 0x6
 987 003e 2E       		.uleb128 0x2e
 988 003f 00       		.byte	0
 989 0040 3F       		.uleb128 0x3f
 990 0041 19       		.uleb128 0x19
 991 0042 03       		.uleb128 0x3
 992 0043 0E       		.uleb128 0xe
 993 0044 3A       		.uleb128 0x3a
 994 0045 0B       		.uleb128 0xb
 995 0046 3B       		.uleb128 0x3b
 996 0047 0B       		.uleb128 0xb
 997 0048 27       		.uleb128 0x27
 998 0049 19       		.uleb128 0x19
 999 004a 11       		.uleb128 0x11
 1000 004b 01       		.uleb128 0x1
 1001 004c 12       		.uleb128 0x12
 1002 004d 06       		.uleb128 0x6
 1003 004e 40       		.uleb128 0x40
 1004 004f 18       		.uleb128 0x18
 1005 0050 9742     		.uleb128 0x2117
 1006 0052 19       		.uleb128 0x19
 1007 0053 00       		.byte	0
 1008 0054 00       		.byte	0
 1009 0055 07       		.uleb128 0x7
 1010 0056 2E       		.uleb128 0x2e
 1011 0057 01       		.byte	0x1
 1012 0058 3F       		.uleb128 0x3f
 1013 0059 19       		.uleb128 0x19
 1014 005a 03       		.uleb128 0x3
 1015 005b 0E       		.uleb128 0xe
 1016 005c 3A       		.uleb128 0x3a
 1017 005d 0B       		.uleb128 0xb
 1018 005e 3B       		.uleb128 0x3b
 1019 005f 05       		.uleb128 0x5
 1020 0060 27       		.uleb128 0x27
 1021 0061 19       		.uleb128 0x19
 1022 0062 11       		.uleb128 0x11
 1023 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 35


 1024 0064 12       		.uleb128 0x12
 1025 0065 06       		.uleb128 0x6
 1026 0066 40       		.uleb128 0x40
 1027 0067 18       		.uleb128 0x18
 1028 0068 9742     		.uleb128 0x2117
 1029 006a 19       		.uleb128 0x19
 1030 006b 01       		.uleb128 0x1
 1031 006c 13       		.uleb128 0x13
 1032 006d 00       		.byte	0
 1033 006e 00       		.byte	0
 1034 006f 08       		.uleb128 0x8
 1035 0070 05       		.uleb128 0x5
 1036 0071 00       		.byte	0
 1037 0072 03       		.uleb128 0x3
 1038 0073 0E       		.uleb128 0xe
 1039 0074 3A       		.uleb128 0x3a
 1040 0075 0B       		.uleb128 0xb
 1041 0076 3B       		.uleb128 0x3b
 1042 0077 05       		.uleb128 0x5
 1043 0078 49       		.uleb128 0x49
 1044 0079 13       		.uleb128 0x13
 1045 007a 02       		.uleb128 0x2
 1046 007b 18       		.uleb128 0x18
 1047 007c 00       		.byte	0
 1048 007d 00       		.byte	0
 1049 007e 09       		.uleb128 0x9
 1050 007f 2E       		.uleb128 0x2e
 1051 0080 00       		.byte	0
 1052 0081 3F       		.uleb128 0x3f
 1053 0082 19       		.uleb128 0x19
 1054 0083 03       		.uleb128 0x3
 1055 0084 0E       		.uleb128 0xe
 1056 0085 3A       		.uleb128 0x3a
 1057 0086 0B       		.uleb128 0xb
 1058 0087 3B       		.uleb128 0x3b
 1059 0088 05       		.uleb128 0x5
 1060 0089 27       		.uleb128 0x27
 1061 008a 19       		.uleb128 0x19
 1062 008b 49       		.uleb128 0x49
 1063 008c 13       		.uleb128 0x13
 1064 008d 11       		.uleb128 0x11
 1065 008e 01       		.uleb128 0x1
 1066 008f 12       		.uleb128 0x12
 1067 0090 06       		.uleb128 0x6
 1068 0091 40       		.uleb128 0x40
 1069 0092 18       		.uleb128 0x18
 1070 0093 9742     		.uleb128 0x2117
 1071 0095 19       		.uleb128 0x19
 1072 0096 00       		.byte	0
 1073 0097 00       		.byte	0
 1074 0098 0A       		.uleb128 0xa
 1075 0099 2E       		.uleb128 0x2e
 1076 009a 01       		.byte	0x1
 1077 009b 3F       		.uleb128 0x3f
 1078 009c 19       		.uleb128 0x19
 1079 009d 03       		.uleb128 0x3
 1080 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 36


 1081 009f 3A       		.uleb128 0x3a
 1082 00a0 0B       		.uleb128 0xb
 1083 00a1 3B       		.uleb128 0x3b
 1084 00a2 05       		.uleb128 0x5
 1085 00a3 27       		.uleb128 0x27
 1086 00a4 19       		.uleb128 0x19
 1087 00a5 49       		.uleb128 0x49
 1088 00a6 13       		.uleb128 0x13
 1089 00a7 11       		.uleb128 0x11
 1090 00a8 01       		.uleb128 0x1
 1091 00a9 12       		.uleb128 0x12
 1092 00aa 06       		.uleb128 0x6
 1093 00ab 40       		.uleb128 0x40
 1094 00ac 18       		.uleb128 0x18
 1095 00ad 9742     		.uleb128 0x2117
 1096 00af 19       		.uleb128 0x19
 1097 00b0 01       		.uleb128 0x1
 1098 00b1 13       		.uleb128 0x13
 1099 00b2 00       		.byte	0
 1100 00b3 00       		.byte	0
 1101 00b4 0B       		.uleb128 0xb
 1102 00b5 34       		.uleb128 0x34
 1103 00b6 00       		.byte	0
 1104 00b7 03       		.uleb128 0x3
 1105 00b8 0E       		.uleb128 0xe
 1106 00b9 3A       		.uleb128 0x3a
 1107 00ba 0B       		.uleb128 0xb
 1108 00bb 3B       		.uleb128 0x3b
 1109 00bc 05       		.uleb128 0x5
 1110 00bd 49       		.uleb128 0x49
 1111 00be 13       		.uleb128 0x13
 1112 00bf 02       		.uleb128 0x2
 1113 00c0 18       		.uleb128 0x18
 1114 00c1 00       		.byte	0
 1115 00c2 00       		.byte	0
 1116 00c3 0C       		.uleb128 0xc
 1117 00c4 898201   		.uleb128 0x4109
 1118 00c7 00       		.byte	0
 1119 00c8 11       		.uleb128 0x11
 1120 00c9 01       		.uleb128 0x1
 1121 00ca 31       		.uleb128 0x31
 1122 00cb 13       		.uleb128 0x13
 1123 00cc 00       		.byte	0
 1124 00cd 00       		.byte	0
 1125 00ce 0D       		.uleb128 0xd
 1126 00cf 2E       		.uleb128 0x2e
 1127 00d0 01       		.byte	0x1
 1128 00d1 3F       		.uleb128 0x3f
 1129 00d2 19       		.uleb128 0x19
 1130 00d3 03       		.uleb128 0x3
 1131 00d4 0E       		.uleb128 0xe
 1132 00d5 3A       		.uleb128 0x3a
 1133 00d6 0B       		.uleb128 0xb
 1134 00d7 3B       		.uleb128 0x3b
 1135 00d8 0B       		.uleb128 0xb
 1136 00d9 27       		.uleb128 0x27
 1137 00da 19       		.uleb128 0x19
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 37


 1138 00db 11       		.uleb128 0x11
 1139 00dc 01       		.uleb128 0x1
 1140 00dd 12       		.uleb128 0x12
 1141 00de 06       		.uleb128 0x6
 1142 00df 40       		.uleb128 0x40
 1143 00e0 18       		.uleb128 0x18
 1144 00e1 9742     		.uleb128 0x2117
 1145 00e3 19       		.uleb128 0x19
 1146 00e4 01       		.uleb128 0x1
 1147 00e5 13       		.uleb128 0x13
 1148 00e6 00       		.byte	0
 1149 00e7 00       		.byte	0
 1150 00e8 0E       		.uleb128 0xe
 1151 00e9 34       		.uleb128 0x34
 1152 00ea 00       		.byte	0
 1153 00eb 03       		.uleb128 0x3
 1154 00ec 0E       		.uleb128 0xe
 1155 00ed 3A       		.uleb128 0x3a
 1156 00ee 0B       		.uleb128 0xb
 1157 00ef 3B       		.uleb128 0x3b
 1158 00f0 0B       		.uleb128 0xb
 1159 00f1 49       		.uleb128 0x49
 1160 00f2 13       		.uleb128 0x13
 1161 00f3 02       		.uleb128 0x2
 1162 00f4 17       		.uleb128 0x17
 1163 00f5 00       		.byte	0
 1164 00f6 00       		.byte	0
 1165 00f7 0F       		.uleb128 0xf
 1166 00f8 898201   		.uleb128 0x4109
 1167 00fb 01       		.byte	0x1
 1168 00fc 11       		.uleb128 0x11
 1169 00fd 01       		.uleb128 0x1
 1170 00fe 31       		.uleb128 0x31
 1171 00ff 13       		.uleb128 0x13
 1172 0100 01       		.uleb128 0x1
 1173 0101 13       		.uleb128 0x13
 1174 0102 00       		.byte	0
 1175 0103 00       		.byte	0
 1176 0104 10       		.uleb128 0x10
 1177 0105 8A8201   		.uleb128 0x410a
 1178 0108 00       		.byte	0
 1179 0109 02       		.uleb128 0x2
 1180 010a 18       		.uleb128 0x18
 1181 010b 9142     		.uleb128 0x2111
 1182 010d 18       		.uleb128 0x18
 1183 010e 00       		.byte	0
 1184 010f 00       		.byte	0
 1185 0110 11       		.uleb128 0x11
 1186 0111 34       		.uleb128 0x34
 1187 0112 00       		.byte	0
 1188 0113 03       		.uleb128 0x3
 1189 0114 0E       		.uleb128 0xe
 1190 0115 3A       		.uleb128 0x3a
 1191 0116 0B       		.uleb128 0xb
 1192 0117 3B       		.uleb128 0x3b
 1193 0118 0B       		.uleb128 0xb
 1194 0119 49       		.uleb128 0x49
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 38


 1195 011a 13       		.uleb128 0x13
 1196 011b 3F       		.uleb128 0x3f
 1197 011c 19       		.uleb128 0x19
 1198 011d 02       		.uleb128 0x2
 1199 011e 18       		.uleb128 0x18
 1200 011f 00       		.byte	0
 1201 0120 00       		.byte	0
 1202 0121 12       		.uleb128 0x12
 1203 0122 2E       		.uleb128 0x2e
 1204 0123 00       		.byte	0
 1205 0124 3F       		.uleb128 0x3f
 1206 0125 19       		.uleb128 0x19
 1207 0126 3C       		.uleb128 0x3c
 1208 0127 19       		.uleb128 0x19
 1209 0128 6E       		.uleb128 0x6e
 1210 0129 0E       		.uleb128 0xe
 1211 012a 03       		.uleb128 0x3
 1212 012b 0E       		.uleb128 0xe
 1213 012c 3A       		.uleb128 0x3a
 1214 012d 0B       		.uleb128 0xb
 1215 012e 3B       		.uleb128 0x3b
 1216 012f 0B       		.uleb128 0xb
 1217 0130 00       		.byte	0
 1218 0131 00       		.byte	0
 1219 0132 00       		.byte	0
 1220              		.section	.debug_loc,"",%progbits
 1221              	.Ldebug_loc0:
 1222              	.LLST0:
 1223 0000 0A000000 		.4byte	.LVL8
 1224 0004 0E000000 		.4byte	.LVL9
 1225 0008 0100     		.2byte	0x1
 1226 000a 53       		.byte	0x53
 1227 000b 00000000 		.4byte	0
 1228 000f 00000000 		.4byte	0
 1229              	.LLST1:
 1230 0013 3A000000 		.4byte	.LVL14
 1231 0017 49000000 		.4byte	.LVL15-1
 1232 001b 0100     		.2byte	0x1
 1233 001d 50       		.byte	0x50
 1234 001e 00000000 		.4byte	0
 1235 0022 00000000 		.4byte	0
 1236              		.section	.debug_aranges,"",%progbits
 1237 0000 94000000 		.4byte	0x94
 1238 0004 0200     		.2byte	0x2
 1239 0006 00000000 		.4byte	.Ldebug_info0
 1240 000a 04       		.byte	0x4
 1241 000b 00       		.byte	0
 1242 000c 0000     		.2byte	0
 1243 000e 0000     		.2byte	0
 1244 0010 00000000 		.4byte	.LFB4
 1245 0014 14000000 		.4byte	.LFE4-.LFB4
 1246 0018 00000000 		.4byte	.LFB5
 1247 001c 10000000 		.4byte	.LFE5-.LFB5
 1248 0020 00000000 		.4byte	.LFB6
 1249 0024 0C000000 		.4byte	.LFE6-.LFB6
 1250 0028 00000000 		.4byte	.LFB7
 1251 002c 14000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 39


 1252 0030 00000000 		.4byte	.LFB9
 1253 0034 0C000000 		.4byte	.LFE9-.LFB9
 1254 0038 00000000 		.4byte	.LFB10
 1255 003c 0C000000 		.4byte	.LFE10-.LFB10
 1256 0040 00000000 		.4byte	.LFB11
 1257 0044 0C000000 		.4byte	.LFE11-.LFB11
 1258 0048 00000000 		.4byte	.LFB12
 1259 004c 0C000000 		.4byte	.LFE12-.LFB12
 1260 0050 00000000 		.4byte	.LFB13
 1261 0054 0C000000 		.4byte	.LFE13-.LFB13
 1262 0058 00000000 		.4byte	.LFB14
 1263 005c 0C000000 		.4byte	.LFE14-.LFB14
 1264 0060 00000000 		.4byte	.LFB15
 1265 0064 0C000000 		.4byte	.LFE15-.LFB15
 1266 0068 00000000 		.4byte	.LFB8
 1267 006c 12000000 		.4byte	.LFE8-.LFB8
 1268 0070 00000000 		.4byte	.LFB3
 1269 0074 5C000000 		.4byte	.LFE3-.LFB3
 1270 0078 00000000 		.4byte	.LFB2
 1271 007c 20000000 		.4byte	.LFE2-.LFB2
 1272 0080 00000000 		.4byte	.LFB16
 1273 0084 0C000000 		.4byte	.LFE16-.LFB16
 1274 0088 00000000 		.4byte	.LFB17
 1275 008c 0C000000 		.4byte	.LFE17-.LFB17
 1276 0090 00000000 		.4byte	0
 1277 0094 00000000 		.4byte	0
 1278              		.section	.debug_ranges,"",%progbits
 1279              	.Ldebug_ranges0:
 1280 0000 00000000 		.4byte	.LFB4
 1281 0004 14000000 		.4byte	.LFE4
 1282 0008 00000000 		.4byte	.LFB5
 1283 000c 10000000 		.4byte	.LFE5
 1284 0010 00000000 		.4byte	.LFB6
 1285 0014 0C000000 		.4byte	.LFE6
 1286 0018 00000000 		.4byte	.LFB7
 1287 001c 14000000 		.4byte	.LFE7
 1288 0020 00000000 		.4byte	.LFB9
 1289 0024 0C000000 		.4byte	.LFE9
 1290 0028 00000000 		.4byte	.LFB10
 1291 002c 0C000000 		.4byte	.LFE10
 1292 0030 00000000 		.4byte	.LFB11
 1293 0034 0C000000 		.4byte	.LFE11
 1294 0038 00000000 		.4byte	.LFB12
 1295 003c 0C000000 		.4byte	.LFE12
 1296 0040 00000000 		.4byte	.LFB13
 1297 0044 0C000000 		.4byte	.LFE13
 1298 0048 00000000 		.4byte	.LFB14
 1299 004c 0C000000 		.4byte	.LFE14
 1300 0050 00000000 		.4byte	.LFB15
 1301 0054 0C000000 		.4byte	.LFE15
 1302 0058 00000000 		.4byte	.LFB8
 1303 005c 12000000 		.4byte	.LFE8
 1304 0060 00000000 		.4byte	.LFB3
 1305 0064 5C000000 		.4byte	.LFE3
 1306 0068 00000000 		.4byte	.LFB2
 1307 006c 20000000 		.4byte	.LFE2
 1308 0070 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 40


 1309 0074 0C000000 		.4byte	.LFE16
 1310 0078 00000000 		.4byte	.LFB17
 1311 007c 0C000000 		.4byte	.LFE17
 1312 0080 00000000 		.4byte	0
 1313 0084 00000000 		.4byte	0
 1314              		.section	.debug_line,"",%progbits
 1315              	.Ldebug_line0:
 1316 0000 8E010000 		.section	.debug_str,"MS",%progbits,1
 1316      02004F00 
 1316      00000201 
 1316      FB0E0D00 
 1316      01010101 
 1317              	.LASF32:
 1318 0000 4C45445F 		.ascii	"LED_PWM_Init\000"
 1318      50574D5F 
 1318      496E6974 
 1318      00
 1319              	.LASF42:
 1320 000d 47656E65 		.ascii	"Generated_Source\\PSoC4\\LED_PWM.c\000"
 1320      72617465 
 1320      645F536F 
 1320      75726365 
 1320      5C50536F 
 1321              	.LASF33:
 1322 002e 72657375 		.ascii	"result\000"
 1322      6C7400
 1323              	.LASF30:
 1324 0035 4C45445F 		.ascii	"LED_PWM_ReadCapture\000"
 1324      50574D5F 
 1324      52656164 
 1324      43617074 
 1324      75726500 
 1325              	.LASF9:
 1326 0049 666C6F61 		.ascii	"float\000"
 1326      7400
 1327              	.LASF21:
 1328 004f 70657269 		.ascii	"period\000"
 1328      6F6400
 1329              	.LASF3:
 1330 0056 73686F72 		.ascii	"short unsigned int\000"
 1330      7420756E 
 1330      7369676E 
 1330      65642069 
 1330      6E7400
 1331              	.LASF22:
 1332 0069 4C45445F 		.ascii	"LED_PWM_WriteCompare\000"
 1332      50574D5F 
 1332      57726974 
 1332      65436F6D 
 1332      70617265 
 1333              	.LASF35:
 1334 007e 4C45445F 		.ascii	"LED_PWM_interruptState\000"
 1334      50574D5F 
 1334      696E7465 
 1334      72727570 
 1334      74537461 
 1335              	.LASF45:
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 41


 1336 0095 4C45445F 		.ascii	"LED_PWM_initVar\000"
 1336      50574D5F 
 1336      696E6974 
 1336      56617200 
 1337              	.LASF38:
 1338 00a5 4C45445F 		.ascii	"LED_PWM_ReadPeriod\000"
 1338      50574D5F 
 1338      52656164 
 1338      50657269 
 1338      6F6400
 1339              	.LASF7:
 1340 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1340      206C6F6E 
 1340      6720756E 
 1340      7369676E 
 1340      65642069 
 1341              	.LASF1:
 1342 00cf 756E7369 		.ascii	"unsigned char\000"
 1342      676E6564 
 1342      20636861 
 1342      7200
 1343              	.LASF13:
 1344 00dd 72656738 		.ascii	"reg8\000"
 1344      00
 1345              	.LASF27:
 1346 00e2 4C45445F 		.ascii	"LED_PWM_ReadStatusRegister\000"
 1346      50574D5F 
 1346      52656164 
 1346      53746174 
 1346      75735265 
 1347              	.LASF26:
 1348 00fd 4C45445F 		.ascii	"LED_PWM_ReadCounter\000"
 1348      50574D5F 
 1348      52656164 
 1348      436F756E 
 1348      74657200 
 1349              	.LASF28:
 1350 0111 4C45445F 		.ascii	"LED_PWM_WriteControlRegister\000"
 1350      50574D5F 
 1350      57726974 
 1350      65436F6E 
 1350      74726F6C 
 1351              	.LASF36:
 1352 012e 4C45445F 		.ascii	"LED_PWM_Start\000"
 1352      50574D5F 
 1352      53746172 
 1352      7400
 1353              	.LASF20:
 1354 013c 636F756E 		.ascii	"counter\000"
 1354      74657200 
 1355              	.LASF10:
 1356 0144 646F7562 		.ascii	"double\000"
 1356      6C6500
 1357              	.LASF31:
 1358 014b 4C45445F 		.ascii	"LED_PWM_ClearFIFO\000"
 1358      50574D5F 
 1358      436C6561 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 42


 1358      72464946 
 1358      4F00
 1359              	.LASF43:
 1360 015d 433A5C55 		.ascii	"C:\\Users\\Toreckk\\Desktop\\Programming\\BLERobot\\"
 1360      73657273 
 1360      5C546F72 
 1360      65636B6B 
 1360      5C446573 
 1361 018b 424C4552 		.ascii	"BLERobot\\PSOC\\RobotBLE.cydsn\000"
 1361      6F626F74 
 1361      5C50534F 
 1361      435C526F 
 1361      626F7442 
 1362              	.LASF44:
 1363 01a8 4C45445F 		.ascii	"LED_PWM_ReadControlRegister\000"
 1363      50574D5F 
 1363      52656164 
 1363      436F6E74 
 1363      726F6C52 
 1364              	.LASF5:
 1365 01c4 6C6F6E67 		.ascii	"long unsigned int\000"
 1365      20756E73 
 1365      69676E65 
 1365      6420696E 
 1365      7400
 1366              	.LASF8:
 1367 01d6 756E7369 		.ascii	"unsigned int\000"
 1367      676E6564 
 1367      20696E74 
 1367      00
 1368              	.LASF40:
 1369 01e3 43794578 		.ascii	"CyExitCriticalSection\000"
 1369      69744372 
 1369      69746963 
 1369      616C5365 
 1369      6374696F 
 1370              	.LASF37:
 1371 01f9 4C45445F 		.ascii	"LED_PWM_ReadCompare\000"
 1371      50574D5F 
 1371      52656164 
 1371      436F6D70 
 1371      61726500 
 1372              	.LASF39:
 1373 020d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1373      74657243 
 1373      72697469 
 1373      63616C53 
 1373      65637469 
 1374              	.LASF16:
 1375 0224 4C45445F 		.ascii	"LED_PWM_Enable\000"
 1375      50574D5F 
 1375      456E6162 
 1375      6C6500
 1376              	.LASF41:
 1377 0233 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1377      43313120 
 1377      352E342E 
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 43


 1377      31203230 
 1377      31363036 
 1378 0266 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1378      20726576 
 1378      6973696F 
 1378      6E203233 
 1378      37373135 
 1379 0299 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1379      66756E63 
 1379      74696F6E 
 1379      2D736563 
 1379      74696F6E 
 1380              	.LASF34:
 1381 02c1 6374726C 		.ascii	"ctrl\000"
 1381      00
 1382              	.LASF15:
 1383 02c6 73697A65 		.ascii	"sizetype\000"
 1383      74797065 
 1383      00
 1384              	.LASF6:
 1385 02cf 6C6F6E67 		.ascii	"long long int\000"
 1385      206C6F6E 
 1385      6720696E 
 1385      7400
 1386              	.LASF25:
 1387 02dd 696E7465 		.ascii	"interruptMode\000"
 1387      72727570 
 1387      744D6F64 
 1387      6500
 1388              	.LASF2:
 1389 02eb 73686F72 		.ascii	"short int\000"
 1389      7420696E 
 1389      7400
 1390              	.LASF17:
 1391 02f5 4C45445F 		.ascii	"LED_PWM_Stop\000"
 1391      50574D5F 
 1391      53746F70 
 1391      00
 1392              	.LASF12:
 1393 0302 75696E74 		.ascii	"uint8\000"
 1393      3800
 1394              	.LASF18:
 1395 0308 4C45445F 		.ascii	"LED_PWM_WriteCounter\000"
 1395      50574D5F 
 1395      57726974 
 1395      65436F75 
 1395      6E746572 
 1396              	.LASF29:
 1397 031d 636F6E74 		.ascii	"control\000"
 1397      726F6C00 
 1398              	.LASF4:
 1399 0325 6C6F6E67 		.ascii	"long int\000"
 1399      20696E74 
 1399      00
 1400              	.LASF11:
 1401 032e 63686172 		.ascii	"char\000"
 1401      00
ARM GAS  C:\Users\Toreckk\AppData\Local\Temp\ccA4fQD9.s 			page 44


 1402              	.LASF24:
 1403 0333 4C45445F 		.ascii	"LED_PWM_SetInterruptMode\000"
 1403      50574D5F 
 1403      53657449 
 1403      6E746572 
 1403      72757074 
 1404              	.LASF14:
 1405 034c 6C6F6E67 		.ascii	"long double\000"
 1405      20646F75 
 1405      626C6500 
 1406              	.LASF0:
 1407 0358 7369676E 		.ascii	"signed char\000"
 1407      65642063 
 1407      68617200 
 1408              	.LASF23:
 1409 0364 636F6D70 		.ascii	"compare\000"
 1409      61726500 
 1410              	.LASF19:
 1411 036c 4C45445F 		.ascii	"LED_PWM_WritePeriod\000"
 1411      50574D5F 
 1411      57726974 
 1411      65506572 
 1411      696F6400 
 1412              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
